"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/fast-png";
exports.ids = ["vendor-chunks/fast-png"];
exports.modules = {

/***/ "(ssr)/./node_modules/fast-png/lib-esm/PngDecoder.js":
/*!*****************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/PngDecoder.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PngDecoder)\n/* harmony export */ });\n/* harmony import */ var iobuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! iobuffer */ \"(ssr)/./node_modules/iobuffer/lib-esm/IOBuffer.js\");\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pako */ \"(ssr)/./node_modules/pako/dist/pako.esm.mjs\");\n/* harmony import */ var _helpers_crc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/crc */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/crc.js\");\n/* harmony import */ var _helpers_decodeInterlaceAdam7__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers/decodeInterlaceAdam7 */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/decodeInterlaceAdam7.js\");\n/* harmony import */ var _helpers_decodeInterlaceNull__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/decodeInterlaceNull */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/decodeInterlaceNull.js\");\n/* harmony import */ var _helpers_signature__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers/signature */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/signature.js\");\n/* harmony import */ var _helpers_text__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers/text */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/text.js\");\n/* harmony import */ var _internalTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internalTypes */ \"(ssr)/./node_modules/fast-png/lib-esm/internalTypes.js\");\n\n\n\n\n\n\n\n\nclass PngDecoder extends iobuffer__WEBPACK_IMPORTED_MODULE_0__.IOBuffer {\n    _checkCrc;\n    _inflator;\n    _png;\n    _apng;\n    _end;\n    _hasPalette;\n    _palette;\n    _hasTransparency;\n    _transparency;\n    _compressionMethod;\n    _filterMethod;\n    _interlaceMethod;\n    _colorType;\n    _isAnimated;\n    _numberOfFrames;\n    _numberOfPlays;\n    _frames;\n    _writingDataChunks;\n    constructor(data, options = {}) {\n        super(data);\n        const { checkCrc = false } = options;\n        this._checkCrc = checkCrc;\n        this._inflator = new pako__WEBPACK_IMPORTED_MODULE_1__.Inflate();\n        this._png = {\n            width: -1,\n            height: -1,\n            channels: -1,\n            data: new Uint8Array(0),\n            depth: 1,\n            text: {},\n        };\n        this._apng = {\n            width: -1,\n            height: -1,\n            channels: -1,\n            depth: 1,\n            numberOfFrames: 1,\n            numberOfPlays: 0,\n            text: {},\n            frames: [],\n        };\n        this._end = false;\n        this._hasPalette = false;\n        this._palette = [];\n        this._hasTransparency = false;\n        this._transparency = new Uint16Array(0);\n        this._compressionMethod = _internalTypes__WEBPACK_IMPORTED_MODULE_7__.CompressionMethod.UNKNOWN;\n        this._filterMethod = _internalTypes__WEBPACK_IMPORTED_MODULE_7__.FilterMethod.UNKNOWN;\n        this._interlaceMethod = _internalTypes__WEBPACK_IMPORTED_MODULE_7__.InterlaceMethod.UNKNOWN;\n        this._colorType = _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.UNKNOWN;\n        this._isAnimated = false;\n        this._numberOfFrames = 1;\n        this._numberOfPlays = 0;\n        this._frames = [];\n        this._writingDataChunks = false;\n        // PNG is always big endian\n        // https://www.w3.org/TR/PNG/#7Integers-and-byte-order\n        this.setBigEndian();\n    }\n    decode() {\n        (0,_helpers_signature__WEBPACK_IMPORTED_MODULE_5__.checkSignature)(this);\n        while (!this._end) {\n            const length = this.readUint32();\n            const type = this.readChars(4);\n            this.decodeChunk(length, type);\n        }\n        this.decodeImage();\n        return this._png;\n    }\n    decodeApng() {\n        (0,_helpers_signature__WEBPACK_IMPORTED_MODULE_5__.checkSignature)(this);\n        while (!this._end) {\n            const length = this.readUint32();\n            const type = this.readChars(4);\n            this.decodeApngChunk(length, type);\n        }\n        this.decodeApngImage();\n        return this._apng;\n    }\n    // https://www.w3.org/TR/PNG/#5Chunk-layout\n    decodeChunk(length, type) {\n        const offset = this.offset;\n        switch (type) {\n            // 11.2 Critical chunks\n            case 'IHDR': // 11.2.2 IHDR Image header\n                this.decodeIHDR();\n                break;\n            case 'PLTE': // 11.2.3 PLTE Palette\n                this.decodePLTE(length);\n                break;\n            case 'IDAT': // 11.2.4 IDAT Image data\n                this.decodeIDAT(length);\n                break;\n            case 'IEND': // 11.2.5 IEND Image trailer\n                this._end = true;\n                break;\n            // 11.3 Ancillary chunks\n            case 'tRNS': // 11.3.2.1 tRNS Transparency\n                this.decodetRNS(length);\n                break;\n            case 'iCCP': // 11.3.3.3 iCCP Embedded ICC profile\n                this.decodeiCCP(length);\n                break;\n            case _helpers_text__WEBPACK_IMPORTED_MODULE_6__.textChunkName: // 11.3.4.3 tEXt Textual data\n                (0,_helpers_text__WEBPACK_IMPORTED_MODULE_6__.decodetEXt)(this._png.text, this, length);\n                break;\n            case 'pHYs': // 11.3.5.3 pHYs Physical pixel dimensions\n                this.decodepHYs();\n                break;\n            default:\n                this.skip(length);\n                break;\n        }\n        if (this.offset - offset !== length) {\n            throw new Error(`Length mismatch while decoding chunk ${type}`);\n        }\n        if (this._checkCrc) {\n            (0,_helpers_crc__WEBPACK_IMPORTED_MODULE_2__.checkCrc)(this, length + 4, type);\n        }\n        else {\n            this.skip(4);\n        }\n    }\n    decodeApngChunk(length, type) {\n        const offset = this.offset;\n        if (type !== 'fdAT' && type !== 'IDAT' && this._writingDataChunks) {\n            this.pushDataToFrame();\n        }\n        switch (type) {\n            case 'acTL':\n                this.decodeACTL();\n                break;\n            case 'fcTL':\n                this.decodeFCTL();\n                break;\n            case 'fdAT':\n                this.decodeFDAT(length);\n                break;\n            default:\n                this.decodeChunk(length, type);\n                this.offset = offset + length;\n                break;\n        }\n        if (this.offset - offset !== length) {\n            throw new Error(`Length mismatch while decoding chunk ${type}`);\n        }\n        if (this._checkCrc) {\n            (0,_helpers_crc__WEBPACK_IMPORTED_MODULE_2__.checkCrc)(this, length + 4, type);\n        }\n        else {\n            this.skip(4);\n        }\n    }\n    // https://www.w3.org/TR/PNG/#11IHDR\n    decodeIHDR() {\n        const image = this._png;\n        image.width = this.readUint32();\n        image.height = this.readUint32();\n        image.depth = checkBitDepth(this.readUint8());\n        const colorType = this.readUint8();\n        this._colorType = colorType;\n        let channels;\n        switch (colorType) {\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.GREYSCALE:\n                channels = 1;\n                break;\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.TRUECOLOUR:\n                channels = 3;\n                break;\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.INDEXED_COLOUR:\n                channels = 1;\n                break;\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.GREYSCALE_ALPHA:\n                channels = 2;\n                break;\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.TRUECOLOUR_ALPHA:\n                channels = 4;\n                break;\n            // Kept for exhaustiveness.\n            // eslint-disable-next-line unicorn/no-useless-switch-case\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.UNKNOWN:\n            default:\n                throw new Error(`Unknown color type: ${colorType}`);\n        }\n        this._png.channels = channels;\n        this._compressionMethod = this.readUint8();\n        if (this._compressionMethod !== _internalTypes__WEBPACK_IMPORTED_MODULE_7__.CompressionMethod.DEFLATE) {\n            throw new Error(`Unsupported compression method: ${this._compressionMethod}`);\n        }\n        this._filterMethod = this.readUint8();\n        this._interlaceMethod = this.readUint8();\n    }\n    decodeACTL() {\n        this._numberOfFrames = this.readUint32();\n        this._numberOfPlays = this.readUint32();\n        this._isAnimated = true;\n    }\n    decodeFCTL() {\n        const image = {\n            sequenceNumber: this.readUint32(),\n            width: this.readUint32(),\n            height: this.readUint32(),\n            xOffset: this.readUint32(),\n            yOffset: this.readUint32(),\n            delayNumber: this.readUint16(),\n            delayDenominator: this.readUint16(),\n            disposeOp: this.readUint8(),\n            blendOp: this.readUint8(),\n            data: new Uint8Array(0),\n        };\n        this._frames.push(image);\n    }\n    // https://www.w3.org/TR/PNG/#11PLTE\n    decodePLTE(length) {\n        if (length % 3 !== 0) {\n            throw new RangeError(`PLTE field length must be a multiple of 3. Got ${length}`);\n        }\n        const l = length / 3;\n        this._hasPalette = true;\n        const palette = [];\n        this._palette = palette;\n        for (let i = 0; i < l; i++) {\n            palette.push([this.readUint8(), this.readUint8(), this.readUint8()]);\n        }\n    }\n    // https://www.w3.org/TR/PNG/#11IDAT\n    decodeIDAT(length) {\n        this._writingDataChunks = true;\n        const dataLength = length;\n        const dataOffset = this.offset + this.byteOffset;\n        this._inflator.push(new Uint8Array(this.buffer, dataOffset, dataLength));\n        if (this._inflator.err) {\n            throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n        }\n        this.skip(length);\n    }\n    decodeFDAT(length) {\n        this._writingDataChunks = true;\n        let dataLength = length;\n        let dataOffset = this.offset + this.byteOffset;\n        dataOffset += 4;\n        dataLength -= 4;\n        this._inflator.push(new Uint8Array(this.buffer, dataOffset, dataLength));\n        if (this._inflator.err) {\n            throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n        }\n        this.skip(length);\n    }\n    // https://www.w3.org/TR/PNG/#11tRNS\n    decodetRNS(length) {\n        switch (this._colorType) {\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.GREYSCALE:\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.TRUECOLOUR: {\n                if (length % 2 !== 0) {\n                    throw new RangeError(`tRNS chunk length must be a multiple of 2. Got ${length}`);\n                }\n                if (length / 2 > this._png.width * this._png.height) {\n                    throw new Error(`tRNS chunk contains more alpha values than there are pixels (${length / 2} vs ${this._png.width * this._png.height})`);\n                }\n                this._hasTransparency = true;\n                this._transparency = new Uint16Array(length / 2);\n                for (let i = 0; i < length / 2; i++) {\n                    this._transparency[i] = this.readUint16();\n                }\n                break;\n            }\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.INDEXED_COLOUR: {\n                if (length > this._palette.length) {\n                    throw new Error(`tRNS chunk contains more alpha values than there are palette colors (${length} vs ${this._palette.length})`);\n                }\n                let i = 0;\n                for (; i < length; i++) {\n                    const alpha = this.readByte();\n                    this._palette[i].push(alpha);\n                }\n                for (; i < this._palette.length; i++) {\n                    this._palette[i].push(255);\n                }\n                break;\n            }\n            // Kept for exhaustiveness.\n            /* eslint-disable unicorn/no-useless-switch-case */\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.UNKNOWN:\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.GREYSCALE_ALPHA:\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.ColorType.TRUECOLOUR_ALPHA:\n            default: {\n                throw new Error(`tRNS chunk is not supported for color type ${this._colorType}`);\n            }\n            /* eslint-enable unicorn/no-useless-switch-case */\n        }\n    }\n    // https://www.w3.org/TR/PNG/#11iCCP\n    decodeiCCP(length) {\n        const name = (0,_helpers_text__WEBPACK_IMPORTED_MODULE_6__.readKeyword)(this);\n        const compressionMethod = this.readUint8();\n        if (compressionMethod !== _internalTypes__WEBPACK_IMPORTED_MODULE_7__.CompressionMethod.DEFLATE) {\n            throw new Error(`Unsupported iCCP compression method: ${compressionMethod}`);\n        }\n        const compressedProfile = this.readBytes(length - name.length - 2);\n        this._png.iccEmbeddedProfile = {\n            name,\n            profile: (0,pako__WEBPACK_IMPORTED_MODULE_1__.inflate)(compressedProfile),\n        };\n    }\n    // https://www.w3.org/TR/PNG/#11pHYs\n    decodepHYs() {\n        const ppuX = this.readUint32();\n        const ppuY = this.readUint32();\n        const unitSpecifier = this.readByte();\n        this._png.resolution = { x: ppuX, y: ppuY, unit: unitSpecifier };\n    }\n    decodeApngImage() {\n        this._apng.width = this._png.width;\n        this._apng.height = this._png.height;\n        this._apng.channels = this._png.channels;\n        this._apng.depth = this._png.depth;\n        this._apng.numberOfFrames = this._numberOfFrames;\n        this._apng.numberOfPlays = this._numberOfPlays;\n        this._apng.text = this._png.text;\n        this._apng.resolution = this._png.resolution;\n        for (let i = 0; i < this._numberOfFrames; i++) {\n            const newFrame = {\n                sequenceNumber: this._frames[i].sequenceNumber,\n                delayNumber: this._frames[i].delayNumber,\n                delayDenominator: this._frames[i].delayDenominator,\n                data: this._apng.depth === 8\n                    ? new Uint8Array(this._apng.width * this._apng.height * this._apng.channels)\n                    : new Uint16Array(this._apng.width * this._apng.height * this._apng.channels),\n            };\n            const frame = this._frames.at(i);\n            if (frame) {\n                frame.data = (0,_helpers_decodeInterlaceNull__WEBPACK_IMPORTED_MODULE_4__.decodeInterlaceNull)({\n                    data: frame.data,\n                    width: frame.width,\n                    height: frame.height,\n                    channels: this._apng.channels,\n                    depth: this._apng.depth,\n                });\n                if (this._hasPalette) {\n                    this._apng.palette = this._palette;\n                }\n                if (this._hasTransparency) {\n                    this._apng.transparency = this._transparency;\n                }\n                if (i === 0 ||\n                    (frame.xOffset === 0 &&\n                        frame.yOffset === 0 &&\n                        frame.width === this._png.width &&\n                        frame.height === this._png.height)) {\n                    newFrame.data = frame.data;\n                }\n                else {\n                    const prevFrame = this._apng.frames.at(i - 1);\n                    this.disposeFrame(frame, prevFrame, newFrame);\n                    this.addFrameDataToCanvas(newFrame, frame);\n                }\n                this._apng.frames.push(newFrame);\n            }\n        }\n        return this._apng;\n    }\n    disposeFrame(frame, prevFrame, imageFrame) {\n        switch (frame.disposeOp) {\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.DisposeOpType.NONE:\n                break;\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.DisposeOpType.BACKGROUND:\n                for (let row = 0; row < this._png.height; row++) {\n                    for (let col = 0; col < this._png.width; col++) {\n                        const index = (row * frame.width + col) * this._png.channels;\n                        for (let channel = 0; channel < this._png.channels; channel++) {\n                            imageFrame.data[index + channel] = 0;\n                        }\n                    }\n                }\n                break;\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.DisposeOpType.PREVIOUS:\n                imageFrame.data.set(prevFrame.data);\n                break;\n            default:\n                throw new Error('Unknown disposeOp');\n        }\n    }\n    addFrameDataToCanvas(imageFrame, frame) {\n        const maxValue = 1 << this._png.depth;\n        const calculatePixelIndices = (row, col) => {\n            const index = ((row + frame.yOffset) * this._png.width + frame.xOffset + col) *\n                this._png.channels;\n            const frameIndex = (row * frame.width + col) * this._png.channels;\n            return { index, frameIndex };\n        };\n        switch (frame.blendOp) {\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.BlendOpType.SOURCE:\n                for (let row = 0; row < frame.height; row++) {\n                    for (let col = 0; col < frame.width; col++) {\n                        const { index, frameIndex } = calculatePixelIndices(row, col);\n                        for (let channel = 0; channel < this._png.channels; channel++) {\n                            imageFrame.data[index + channel] =\n                                frame.data[frameIndex + channel];\n                        }\n                    }\n                }\n                break;\n            // https://www.w3.org/TR/png-3/#13Alpha-channel-processing\n            case _internalTypes__WEBPACK_IMPORTED_MODULE_7__.BlendOpType.OVER:\n                for (let row = 0; row < frame.height; row++) {\n                    for (let col = 0; col < frame.width; col++) {\n                        const { index, frameIndex } = calculatePixelIndices(row, col);\n                        for (let channel = 0; channel < this._png.channels; channel++) {\n                            const sourceAlpha = frame.data[frameIndex + this._png.channels - 1] / maxValue;\n                            const foregroundValue = channel % (this._png.channels - 1) === 0\n                                ? 1\n                                : frame.data[frameIndex + channel];\n                            const value = Math.floor(sourceAlpha * foregroundValue +\n                                (1 - sourceAlpha) * imageFrame.data[index + channel]);\n                            imageFrame.data[index + channel] += value;\n                        }\n                    }\n                }\n                break;\n            default:\n                throw new Error('Unknown blendOp');\n        }\n    }\n    decodeImage() {\n        if (this._inflator.err) {\n            throw new Error(`Error while decompressing the data: ${this._inflator.err}`);\n        }\n        const data = this._isAnimated\n            ? (this._frames?.at(0)).data\n            : this._inflator.result;\n        if (this._filterMethod !== _internalTypes__WEBPACK_IMPORTED_MODULE_7__.FilterMethod.ADAPTIVE) {\n            throw new Error(`Filter method ${this._filterMethod} not supported`);\n        }\n        if (this._interlaceMethod === _internalTypes__WEBPACK_IMPORTED_MODULE_7__.InterlaceMethod.NO_INTERLACE) {\n            this._png.data = (0,_helpers_decodeInterlaceNull__WEBPACK_IMPORTED_MODULE_4__.decodeInterlaceNull)({\n                data: data,\n                width: this._png.width,\n                height: this._png.height,\n                channels: this._png.channels,\n                depth: this._png.depth,\n            });\n        }\n        else if (this._interlaceMethod === _internalTypes__WEBPACK_IMPORTED_MODULE_7__.InterlaceMethod.ADAM7) {\n            this._png.data = (0,_helpers_decodeInterlaceAdam7__WEBPACK_IMPORTED_MODULE_3__.decodeInterlaceAdam7)({\n                data: data,\n                width: this._png.width,\n                height: this._png.height,\n                channels: this._png.channels,\n                depth: this._png.depth,\n            });\n        }\n        else {\n            throw new Error(`Interlace method ${this._interlaceMethod} not supported`);\n        }\n        if (this._hasPalette) {\n            this._png.palette = this._palette;\n        }\n        if (this._hasTransparency) {\n            this._png.transparency = this._transparency;\n        }\n    }\n    pushDataToFrame() {\n        const result = this._inflator.result;\n        const lastFrame = this._frames.at(-1);\n        if (lastFrame) {\n            lastFrame.data = result;\n        }\n        else {\n            this._frames.push({\n                sequenceNumber: 0,\n                width: this._png.width,\n                height: this._png.height,\n                xOffset: 0,\n                yOffset: 0,\n                delayNumber: 0,\n                delayDenominator: 0,\n                disposeOp: _internalTypes__WEBPACK_IMPORTED_MODULE_7__.DisposeOpType.NONE,\n                blendOp: _internalTypes__WEBPACK_IMPORTED_MODULE_7__.BlendOpType.SOURCE,\n                data: result,\n            });\n        }\n        this._inflator = new pako__WEBPACK_IMPORTED_MODULE_1__.Inflate();\n        this._writingDataChunks = false;\n    }\n}\nfunction checkBitDepth(value) {\n    if (value !== 1 &&\n        value !== 2 &&\n        value !== 4 &&\n        value !== 8 &&\n        value !== 16) {\n        throw new Error(`invalid bit depth: ${value}`);\n    }\n    return value;\n}\n//# sourceMappingURL=PngDecoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/PngDecoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/PngEncoder.js":
/*!*****************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/PngEncoder.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PngEncoder)\n/* harmony export */ });\n/* harmony import */ var iobuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! iobuffer */ \"(ssr)/./node_modules/iobuffer/lib-esm/IOBuffer.js\");\n/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pako */ \"(ssr)/./node_modules/pako/dist/pako.esm.mjs\");\n/* harmony import */ var _helpers_crc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/crc */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/crc.js\");\n/* harmony import */ var _helpers_signature__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helpers/signature */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/signature.js\");\n/* harmony import */ var _helpers_text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/text */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/text.js\");\n/* harmony import */ var _internalTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internalTypes */ \"(ssr)/./node_modules/fast-png/lib-esm/internalTypes.js\");\n\n\n\n\n\n\nconst defaultZlibOptions = {\n    level: 3,\n};\nclass PngEncoder extends iobuffer__WEBPACK_IMPORTED_MODULE_0__.IOBuffer {\n    _png;\n    _zlibOptions;\n    _colorType;\n    _interlaceMethod;\n    constructor(data, options = {}) {\n        super();\n        this._colorType = _internalTypes__WEBPACK_IMPORTED_MODULE_5__.ColorType.UNKNOWN;\n        this._zlibOptions = { ...defaultZlibOptions, ...options.zlib };\n        this._png = this._checkData(data);\n        this._interlaceMethod =\n            (options.interlace === 'Adam7'\n                ? _internalTypes__WEBPACK_IMPORTED_MODULE_5__.InterlaceMethod.ADAM7\n                : _internalTypes__WEBPACK_IMPORTED_MODULE_5__.InterlaceMethod.NO_INTERLACE) ?? _internalTypes__WEBPACK_IMPORTED_MODULE_5__.InterlaceMethod.NO_INTERLACE;\n        this.setBigEndian();\n    }\n    encode() {\n        (0,_helpers_signature__WEBPACK_IMPORTED_MODULE_3__.writeSignature)(this);\n        this.encodeIHDR();\n        if (this._png.palette) {\n            this.encodePLTE();\n            if (this._png.palette[0].length === 4) {\n                this.encodeTRNS();\n            }\n        }\n        this.encodeData();\n        if (this._png.text) {\n            for (const [keyword, text] of Object.entries(this._png.text)) {\n                (0,_helpers_text__WEBPACK_IMPORTED_MODULE_4__.encodetEXt)(this, keyword, text);\n            }\n        }\n        this.encodeIEND();\n        return this.toArray();\n    }\n    // https://www.w3.org/TR/PNG/#11IHDR\n    encodeIHDR() {\n        this.writeUint32(13);\n        this.writeChars('IHDR');\n        this.writeUint32(this._png.width);\n        this.writeUint32(this._png.height);\n        this.writeByte(this._png.depth);\n        this.writeByte(this._colorType);\n        this.writeByte(_internalTypes__WEBPACK_IMPORTED_MODULE_5__.CompressionMethod.DEFLATE);\n        this.writeByte(_internalTypes__WEBPACK_IMPORTED_MODULE_5__.FilterMethod.ADAPTIVE);\n        this.writeByte(this._interlaceMethod);\n        (0,_helpers_crc__WEBPACK_IMPORTED_MODULE_2__.writeCrc)(this, 17);\n    }\n    // https://www.w3.org/TR/PNG/#11IEND\n    encodeIEND() {\n        this.writeUint32(0);\n        this.writeChars('IEND');\n        (0,_helpers_crc__WEBPACK_IMPORTED_MODULE_2__.writeCrc)(this, 4);\n    }\n    encodePLTE() {\n        const paletteLength = this._png.palette?.length * 3;\n        this.writeUint32(paletteLength);\n        this.writeChars('PLTE');\n        for (const color of this._png.palette) {\n            this.writeByte(color[0]);\n            this.writeByte(color[1]);\n            this.writeByte(color[2]);\n        }\n        (0,_helpers_crc__WEBPACK_IMPORTED_MODULE_2__.writeCrc)(this, 4 + paletteLength);\n    }\n    encodeTRNS() {\n        const alpha = this._png.palette.filter((color) => {\n            return color.at(-1) !== 255;\n        });\n        this.writeUint32(alpha.length);\n        this.writeChars('tRNS');\n        for (const el of alpha) {\n            this.writeByte(el.at(-1));\n        }\n        (0,_helpers_crc__WEBPACK_IMPORTED_MODULE_2__.writeCrc)(this, 4 + alpha.length);\n    }\n    // https://www.w3.org/TR/PNG/#11IDAT\n    encodeIDAT(data) {\n        this.writeUint32(data.length);\n        this.writeChars('IDAT');\n        this.writeBytes(data);\n        (0,_helpers_crc__WEBPACK_IMPORTED_MODULE_2__.writeCrc)(this, data.length + 4);\n    }\n    encodeData() {\n        const { width, height, channels, depth, data } = this._png;\n        const slotsPerLine = depth <= 8\n            ? Math.ceil((width * depth) / 8) * channels\n            : Math.ceil((((width * depth) / 8) * channels) / 2);\n        const newData = new iobuffer__WEBPACK_IMPORTED_MODULE_0__.IOBuffer().setBigEndian();\n        let offset = 0;\n        if (this._interlaceMethod === _internalTypes__WEBPACK_IMPORTED_MODULE_5__.InterlaceMethod.NO_INTERLACE) {\n            for (let i = 0; i < height; i++) {\n                newData.writeByte(0); // no filter\n                if (depth === 16) {\n                    offset = writeDataUint16(data, newData, slotsPerLine, offset);\n                }\n                else {\n                    offset = writeDataBytes(data, newData, slotsPerLine, offset);\n                }\n            }\n        }\n        else if (this._interlaceMethod === _internalTypes__WEBPACK_IMPORTED_MODULE_5__.InterlaceMethod.ADAM7) {\n            // Adam7 interlacing\n            offset = writeDataInterlaced(this._png, data, newData, offset);\n        }\n        const buffer = newData.toArray();\n        const compressed = (0,pako__WEBPACK_IMPORTED_MODULE_1__.deflate)(buffer, this._zlibOptions);\n        this.encodeIDAT(compressed);\n    }\n    _checkData(data) {\n        const { colorType, channels, depth } = getColorType(data, data.palette);\n        const png = {\n            width: checkInteger(data.width, 'width'),\n            height: checkInteger(data.height, 'height'),\n            channels,\n            data: data.data,\n            depth,\n            text: data.text,\n            palette: data.palette,\n        };\n        this._colorType = colorType;\n        const expectedSize = depth < 8\n            ? Math.ceil((png.width * depth) / 8) * png.height * channels\n            : png.width * png.height * channels;\n        if (png.data.length !== expectedSize) {\n            throw new RangeError(`wrong data size. Found ${png.data.length}, expected ${expectedSize}`);\n        }\n        return png;\n    }\n}\nfunction checkInteger(value, name) {\n    if (Number.isInteger(value) && value > 0) {\n        return value;\n    }\n    throw new TypeError(`${name} must be a positive integer`);\n}\nfunction getColorType(data, palette) {\n    const { channels = 4, depth = 8 } = data;\n    if (channels !== 4 && channels !== 3 && channels !== 2 && channels !== 1) {\n        throw new RangeError(`unsupported number of channels: ${channels}`);\n    }\n    const returnValue = {\n        channels,\n        depth,\n        colorType: _internalTypes__WEBPACK_IMPORTED_MODULE_5__.ColorType.UNKNOWN,\n    };\n    switch (channels) {\n        case 4:\n            returnValue.colorType = _internalTypes__WEBPACK_IMPORTED_MODULE_5__.ColorType.TRUECOLOUR_ALPHA;\n            break;\n        case 3:\n            returnValue.colorType = _internalTypes__WEBPACK_IMPORTED_MODULE_5__.ColorType.TRUECOLOUR;\n            break;\n        case 1:\n            if (palette) {\n                returnValue.colorType = _internalTypes__WEBPACK_IMPORTED_MODULE_5__.ColorType.INDEXED_COLOUR;\n            }\n            else {\n                returnValue.colorType = _internalTypes__WEBPACK_IMPORTED_MODULE_5__.ColorType.GREYSCALE;\n            }\n            break;\n        case 2:\n            returnValue.colorType = _internalTypes__WEBPACK_IMPORTED_MODULE_5__.ColorType.GREYSCALE_ALPHA;\n            break;\n        default:\n            throw new Error('unsupported number of channels');\n    }\n    return returnValue;\n}\nfunction writeDataBytes(data, newData, slotsPerLine, offset) {\n    for (let j = 0; j < slotsPerLine; j++) {\n        newData.writeByte(data[offset++]);\n    }\n    return offset;\n}\nfunction writeDataInterlaced(imageData, data, newData, offset) {\n    const passes = [\n        { x: 0, y: 0, xStep: 8, yStep: 8 },\n        { x: 4, y: 0, xStep: 8, yStep: 8 },\n        { x: 0, y: 4, xStep: 4, yStep: 8 },\n        { x: 2, y: 0, xStep: 4, yStep: 4 },\n        { x: 0, y: 2, xStep: 2, yStep: 4 },\n        { x: 1, y: 0, xStep: 2, yStep: 2 },\n        { x: 0, y: 1, xStep: 1, yStep: 2 },\n    ];\n    const { width, height, channels, depth } = imageData;\n    let pixelSize = 0;\n    if (depth === 16) {\n        pixelSize = (channels * depth) / 8 / 2;\n    }\n    else {\n        pixelSize = (channels * depth) / 8;\n    }\n    // Process each pass\n    for (let passIndex = 0; passIndex < 7; passIndex++) {\n        const pass = passes[passIndex];\n        const passWidth = Math.floor((width - pass.x + pass.xStep - 1) / pass.xStep);\n        const passHeight = Math.floor((height - pass.y + pass.yStep - 1) / pass.yStep);\n        if (passWidth <= 0 || passHeight <= 0)\n            continue;\n        const passLineBytes = passWidth * pixelSize;\n        // For each scanline in this pass\n        for (let y = 0; y < passHeight; y++) {\n            const imageY = pass.y + y * pass.yStep;\n            // Extract raw scanline data\n            const rawScanline = depth <= 8\n                ? new Uint8Array(passLineBytes)\n                : new Uint16Array(passLineBytes);\n            let rawOffset = 0;\n            for (let x = 0; x < passWidth; x++) {\n                const imageX = pass.x + x * pass.xStep;\n                if (imageX < width && imageY < height) {\n                    const srcPos = (imageY * width + imageX) * pixelSize;\n                    for (let i = 0; i < pixelSize; i++) {\n                        rawScanline[rawOffset++] = data[srcPos + i];\n                    }\n                }\n            }\n            newData.writeByte(0); // no filter\n            if (depth === 8) {\n                newData.writeBytes(rawScanline);\n            }\n            else if (depth === 16) {\n                for (const value of rawScanline) {\n                    newData.writeByte((value >> 8) & 0xff); // High byte\n                    newData.writeByte(value & 0xff);\n                }\n            }\n        }\n    }\n    return offset;\n}\nfunction writeDataUint16(data, newData, slotsPerLine, offset) {\n    for (let j = 0; j < slotsPerLine; j++) {\n        newData.writeUint16(data[offset++]);\n    }\n    return offset;\n}\n//# sourceMappingURL=PngEncoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/PngEncoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/convertIndexedToRgb.js":
/*!**************************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/convertIndexedToRgb.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertIndexedToRgb: () => (/* binding */ convertIndexedToRgb)\n/* harmony export */ });\n/**\n * Converts indexed data into RGB/RGBA format\n * @param decodedImage - Image to decode data from.\n * @returns Uint8Array with RGB data.\n */\nfunction convertIndexedToRgb(decodedImage) {\n    const palette = decodedImage.palette;\n    const depth = decodedImage.depth;\n    if (!palette) {\n        throw new Error('Color palette is undefined.');\n    }\n    checkDataSize(decodedImage);\n    const indexSize = decodedImage.width * decodedImage.height;\n    const resSize = indexSize * palette[0].length;\n    const res = new Uint8Array(resSize);\n    let indexPos = 0;\n    let offset = 0;\n    const indexes = new Uint8Array(indexSize);\n    let bit = 0xff;\n    switch (depth) {\n        case 1:\n            bit = 0x80;\n            break;\n        case 2:\n            bit = 0xc0;\n            break;\n        case 4:\n            bit = 0xf0;\n            break;\n        case 8:\n            bit = 0xff;\n            break;\n        default:\n            throw new Error('Incorrect depth value');\n    }\n    for (const byte of decodedImage.data) {\n        let bit2 = bit;\n        let shift = 8;\n        while (bit2) {\n            shift -= depth;\n            indexes[indexPos++] = (byte & bit2) >> shift;\n            bit2 = bit2 >> depth;\n            if (indexPos % decodedImage.width === 0) {\n                break;\n            }\n        }\n    }\n    if (decodedImage.palette) {\n        for (const index of indexes) {\n            const color = decodedImage.palette.at(index);\n            if (!color) {\n                throw new Error('Incorrect index of palette color');\n            }\n            res.set(color, offset);\n            offset += color.length;\n        }\n    }\n    return res;\n}\nfunction checkDataSize(image) {\n    const expectedSize = image.depth < 8\n        ? Math.ceil((image.width * image.depth) / 8) *\n            image.height *\n            image.channels\n        : image.width * image.height * image.channels;\n    if (image.data.length !== expectedSize) {\n        throw new RangeError(`wrong data size. Found ${image.data.length}, expected ${expectedSize}`);\n    }\n}\n//# sourceMappingURL=convertIndexedToRgb.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9jb252ZXJ0SW5kZXhlZFRvUmdiLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsa0JBQWtCLGFBQWEsYUFBYTtBQUNuRztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFjaGFuU2hldHR5XFxPbmVEcml2ZSAtIEJpb1RhbGVcXERvY3VtZW50c1xcTGVhcm5pbmdQcm9qZWN0c1xcUmVhY3RBcHBzXFxHRk1JXFxnZm1pLW5leHRcXG5vZGVfbW9kdWxlc1xcZmFzdC1wbmdcXGxpYi1lc21cXGNvbnZlcnRJbmRleGVkVG9SZ2IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb252ZXJ0cyBpbmRleGVkIGRhdGEgaW50byBSR0IvUkdCQSBmb3JtYXRcbiAqIEBwYXJhbSBkZWNvZGVkSW1hZ2UgLSBJbWFnZSB0byBkZWNvZGUgZGF0YSBmcm9tLlxuICogQHJldHVybnMgVWludDhBcnJheSB3aXRoIFJHQiBkYXRhLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydEluZGV4ZWRUb1JnYihkZWNvZGVkSW1hZ2UpIHtcbiAgICBjb25zdCBwYWxldHRlID0gZGVjb2RlZEltYWdlLnBhbGV0dGU7XG4gICAgY29uc3QgZGVwdGggPSBkZWNvZGVkSW1hZ2UuZGVwdGg7XG4gICAgaWYgKCFwYWxldHRlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ29sb3IgcGFsZXR0ZSBpcyB1bmRlZmluZWQuJyk7XG4gICAgfVxuICAgIGNoZWNrRGF0YVNpemUoZGVjb2RlZEltYWdlKTtcbiAgICBjb25zdCBpbmRleFNpemUgPSBkZWNvZGVkSW1hZ2Uud2lkdGggKiBkZWNvZGVkSW1hZ2UuaGVpZ2h0O1xuICAgIGNvbnN0IHJlc1NpemUgPSBpbmRleFNpemUgKiBwYWxldHRlWzBdLmxlbmd0aDtcbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShyZXNTaXplKTtcbiAgICBsZXQgaW5kZXhQb3MgPSAwO1xuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIGNvbnN0IGluZGV4ZXMgPSBuZXcgVWludDhBcnJheShpbmRleFNpemUpO1xuICAgIGxldCBiaXQgPSAweGZmO1xuICAgIHN3aXRjaCAoZGVwdGgpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgYml0ID0gMHg4MDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICBiaXQgPSAweGMwO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgIGJpdCA9IDB4ZjA7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgYml0ID0gMHhmZjtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgZGVwdGggdmFsdWUnKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBieXRlIG9mIGRlY29kZWRJbWFnZS5kYXRhKSB7XG4gICAgICAgIGxldCBiaXQyID0gYml0O1xuICAgICAgICBsZXQgc2hpZnQgPSA4O1xuICAgICAgICB3aGlsZSAoYml0Mikge1xuICAgICAgICAgICAgc2hpZnQgLT0gZGVwdGg7XG4gICAgICAgICAgICBpbmRleGVzW2luZGV4UG9zKytdID0gKGJ5dGUgJiBiaXQyKSA+PiBzaGlmdDtcbiAgICAgICAgICAgIGJpdDIgPSBiaXQyID4+IGRlcHRoO1xuICAgICAgICAgICAgaWYgKGluZGV4UG9zICUgZGVjb2RlZEltYWdlLndpZHRoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGRlY29kZWRJbWFnZS5wYWxldHRlKSB7XG4gICAgICAgIGZvciAoY29uc3QgaW5kZXggb2YgaW5kZXhlcykge1xuICAgICAgICAgICAgY29uc3QgY29sb3IgPSBkZWNvZGVkSW1hZ2UucGFsZXR0ZS5hdChpbmRleCk7XG4gICAgICAgICAgICBpZiAoIWNvbG9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgaW5kZXggb2YgcGFsZXR0ZSBjb2xvcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVzLnNldChjb2xvciwgb2Zmc2V0KTtcbiAgICAgICAgICAgIG9mZnNldCArPSBjb2xvci5sZW5ndGg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmZ1bmN0aW9uIGNoZWNrRGF0YVNpemUoaW1hZ2UpIHtcbiAgICBjb25zdCBleHBlY3RlZFNpemUgPSBpbWFnZS5kZXB0aCA8IDhcbiAgICAgICAgPyBNYXRoLmNlaWwoKGltYWdlLndpZHRoICogaW1hZ2UuZGVwdGgpIC8gOCkgKlxuICAgICAgICAgICAgaW1hZ2UuaGVpZ2h0ICpcbiAgICAgICAgICAgIGltYWdlLmNoYW5uZWxzXG4gICAgICAgIDogaW1hZ2Uud2lkdGggKiBpbWFnZS5oZWlnaHQgKiBpbWFnZS5jaGFubmVscztcbiAgICBpZiAoaW1hZ2UuZGF0YS5sZW5ndGggIT09IGV4cGVjdGVkU2l6ZSkge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgd3JvbmcgZGF0YSBzaXplLiBGb3VuZCAke2ltYWdlLmRhdGEubGVuZ3RofSwgZXhwZWN0ZWQgJHtleHBlY3RlZFNpemV9YCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udmVydEluZGV4ZWRUb1JnYi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/convertIndexedToRgb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/helpers/applyUnfilter.js":
/*!****************************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/helpers/applyUnfilter.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyUnfilter: () => (/* binding */ applyUnfilter)\n/* harmony export */ });\n/* harmony import */ var _unfilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./unfilter */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/unfilter.js\");\n\n/**\n * Apllies filter on scanline based on the filter type.\n * @param filterType - The filter type to apply.\n * @param currentLine - The current line of pixel data.\n * @param newLine - The new line of pixel data.\n * @param prevLine - The previous line of pixel data.\n * @param passLineBytes - The number of bytes in the pass line.\n * @param bytesPerPixel - The number of bytes per pixel.\n */\nfunction applyUnfilter(filterType, currentLine, newLine, prevLine, passLineBytes, bytesPerPixel) {\n    switch (filterType) {\n        case 0:\n            (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterNone)(currentLine, newLine, passLineBytes);\n            break;\n        case 1:\n            (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterSub)(currentLine, newLine, passLineBytes, bytesPerPixel);\n            break;\n        case 2:\n            (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterUp)(currentLine, newLine, prevLine, passLineBytes);\n            break;\n        case 3:\n            (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterAverage)(currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n            break;\n        case 4:\n            (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterPaeth)(currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n            break;\n        default:\n            throw new Error(`Unsupported filter: ${filterType}`);\n    }\n}\n//# sourceMappingURL=applyUnfilter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9oZWxwZXJzL2FwcGx5VW5maWx0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0c7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsWUFBWSx1REFBWTtBQUN4QjtBQUNBO0FBQ0EsWUFBWSxzREFBVztBQUN2QjtBQUNBO0FBQ0EsWUFBWSxxREFBVTtBQUN0QjtBQUNBO0FBQ0EsWUFBWSwwREFBZTtBQUMzQjtBQUNBO0FBQ0EsWUFBWSx3REFBYTtBQUN6QjtBQUNBO0FBQ0EsbURBQW1ELFdBQVc7QUFDOUQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhY2hhblNoZXR0eVxcT25lRHJpdmUgLSBCaW9UYWxlXFxEb2N1bWVudHNcXExlYXJuaW5nUHJvamVjdHNcXFJlYWN0QXBwc1xcR0ZNSVxcZ2ZtaS1uZXh0XFxub2RlX21vZHVsZXNcXGZhc3QtcG5nXFxsaWItZXNtXFxoZWxwZXJzXFxhcHBseVVuZmlsdGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVuZmlsdGVyQXZlcmFnZSwgdW5maWx0ZXJOb25lLCB1bmZpbHRlclBhZXRoLCB1bmZpbHRlclN1YiwgdW5maWx0ZXJVcCwgfSBmcm9tICcuL3VuZmlsdGVyJztcbi8qKlxuICogQXBsbGllcyBmaWx0ZXIgb24gc2NhbmxpbmUgYmFzZWQgb24gdGhlIGZpbHRlciB0eXBlLlxuICogQHBhcmFtIGZpbHRlclR5cGUgLSBUaGUgZmlsdGVyIHR5cGUgdG8gYXBwbHkuXG4gKiBAcGFyYW0gY3VycmVudExpbmUgLSBUaGUgY3VycmVudCBsaW5lIG9mIHBpeGVsIGRhdGEuXG4gKiBAcGFyYW0gbmV3TGluZSAtIFRoZSBuZXcgbGluZSBvZiBwaXhlbCBkYXRhLlxuICogQHBhcmFtIHByZXZMaW5lIC0gVGhlIHByZXZpb3VzIGxpbmUgb2YgcGl4ZWwgZGF0YS5cbiAqIEBwYXJhbSBwYXNzTGluZUJ5dGVzIC0gVGhlIG51bWJlciBvZiBieXRlcyBpbiB0aGUgcGFzcyBsaW5lLlxuICogQHBhcmFtIGJ5dGVzUGVyUGl4ZWwgLSBUaGUgbnVtYmVyIG9mIGJ5dGVzIHBlciBwaXhlbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5VW5maWx0ZXIoZmlsdGVyVHlwZSwgY3VycmVudExpbmUsIG5ld0xpbmUsIHByZXZMaW5lLCBwYXNzTGluZUJ5dGVzLCBieXRlc1BlclBpeGVsKSB7XG4gICAgc3dpdGNoIChmaWx0ZXJUeXBlKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIHVuZmlsdGVyTm9uZShjdXJyZW50TGluZSwgbmV3TGluZSwgcGFzc0xpbmVCeXRlcyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgdW5maWx0ZXJTdWIoY3VycmVudExpbmUsIG5ld0xpbmUsIHBhc3NMaW5lQnl0ZXMsIGJ5dGVzUGVyUGl4ZWwpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIHVuZmlsdGVyVXAoY3VycmVudExpbmUsIG5ld0xpbmUsIHByZXZMaW5lLCBwYXNzTGluZUJ5dGVzKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICB1bmZpbHRlckF2ZXJhZ2UoY3VycmVudExpbmUsIG5ld0xpbmUsIHByZXZMaW5lLCBwYXNzTGluZUJ5dGVzLCBieXRlc1BlclBpeGVsKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICB1bmZpbHRlclBhZXRoKGN1cnJlbnRMaW5lLCBuZXdMaW5lLCBwcmV2TGluZSwgcGFzc0xpbmVCeXRlcywgYnl0ZXNQZXJQaXhlbCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZmlsdGVyOiAke2ZpbHRlclR5cGV9YCk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwbHlVbmZpbHRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/helpers/applyUnfilter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/helpers/crc.js":
/*!******************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/helpers/crc.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkCrc: () => (/* binding */ checkCrc),\n/* harmony export */   writeCrc: () => (/* binding */ writeCrc)\n/* harmony export */ });\nconst crcTable = [];\nfor (let n = 0; n < 256; n++) {\n    let c = n;\n    for (let k = 0; k < 8; k++) {\n        if (c & 1) {\n            c = 0xedb88320 ^ (c >>> 1);\n        }\n        else {\n            c = c >>> 1;\n        }\n    }\n    crcTable[n] = c;\n}\nconst initialCrc = 0xffffffff;\nfunction updateCrc(currentCrc, data, length) {\n    let c = currentCrc;\n    for (let n = 0; n < length; n++) {\n        c = crcTable[(c ^ data[n]) & 0xff] ^ (c >>> 8);\n    }\n    return c;\n}\nfunction crc(data, length) {\n    return (updateCrc(initialCrc, data, length) ^ initialCrc) >>> 0;\n}\nfunction checkCrc(buffer, crcLength, chunkName) {\n    const expectedCrc = buffer.readUint32();\n    const actualCrc = crc(new Uint8Array(buffer.buffer, buffer.byteOffset + buffer.offset - crcLength - 4, crcLength), crcLength); // \"- 4\" because we already advanced by reading the CRC\n    if (actualCrc !== expectedCrc) {\n        throw new Error(`CRC mismatch for chunk ${chunkName}. Expected ${expectedCrc}, found ${actualCrc}`);\n    }\n}\nfunction writeCrc(buffer, length) {\n    buffer.writeUint32(crc(new Uint8Array(buffer.buffer, buffer.byteOffset + buffer.offset - length, length), length));\n}\n//# sourceMappingURL=crc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9oZWxwZXJzL2NyYy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtSUFBbUk7QUFDbkk7QUFDQSxrREFBa0QsVUFBVSxhQUFhLFlBQVksVUFBVSxVQUFVO0FBQ3pHO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWNoYW5TaGV0dHlcXE9uZURyaXZlIC0gQmlvVGFsZVxcRG9jdW1lbnRzXFxMZWFybmluZ1Byb2plY3RzXFxSZWFjdEFwcHNcXEdGTUlcXGdmbWktbmV4dFxcbm9kZV9tb2R1bGVzXFxmYXN0LXBuZ1xcbGliLWVzbVxcaGVscGVyc1xcY3JjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyY1RhYmxlID0gW107XG5mb3IgKGxldCBuID0gMDsgbiA8IDI1NjsgbisrKSB7XG4gICAgbGV0IGMgPSBuO1xuICAgIGZvciAobGV0IGsgPSAwOyBrIDwgODsgaysrKSB7XG4gICAgICAgIGlmIChjICYgMSkge1xuICAgICAgICAgICAgYyA9IDB4ZWRiODgzMjAgXiAoYyA+Pj4gMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjID0gYyA+Pj4gMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjcmNUYWJsZVtuXSA9IGM7XG59XG5jb25zdCBpbml0aWFsQ3JjID0gMHhmZmZmZmZmZjtcbmZ1bmN0aW9uIHVwZGF0ZUNyYyhjdXJyZW50Q3JjLCBkYXRhLCBsZW5ndGgpIHtcbiAgICBsZXQgYyA9IGN1cnJlbnRDcmM7XG4gICAgZm9yIChsZXQgbiA9IDA7IG4gPCBsZW5ndGg7IG4rKykge1xuICAgICAgICBjID0gY3JjVGFibGVbKGMgXiBkYXRhW25dKSAmIDB4ZmZdIF4gKGMgPj4+IDgpO1xuICAgIH1cbiAgICByZXR1cm4gYztcbn1cbmZ1bmN0aW9uIGNyYyhkYXRhLCBsZW5ndGgpIHtcbiAgICByZXR1cm4gKHVwZGF0ZUNyYyhpbml0aWFsQ3JjLCBkYXRhLCBsZW5ndGgpIF4gaW5pdGlhbENyYykgPj4+IDA7XG59XG5leHBvcnQgZnVuY3Rpb24gY2hlY2tDcmMoYnVmZmVyLCBjcmNMZW5ndGgsIGNodW5rTmFtZSkge1xuICAgIGNvbnN0IGV4cGVjdGVkQ3JjID0gYnVmZmVyLnJlYWRVaW50MzIoKTtcbiAgICBjb25zdCBhY3R1YWxDcmMgPSBjcmMobmV3IFVpbnQ4QXJyYXkoYnVmZmVyLmJ1ZmZlciwgYnVmZmVyLmJ5dGVPZmZzZXQgKyBidWZmZXIub2Zmc2V0IC0gY3JjTGVuZ3RoIC0gNCwgY3JjTGVuZ3RoKSwgY3JjTGVuZ3RoKTsgLy8gXCItIDRcIiBiZWNhdXNlIHdlIGFscmVhZHkgYWR2YW5jZWQgYnkgcmVhZGluZyB0aGUgQ1JDXG4gICAgaWYgKGFjdHVhbENyYyAhPT0gZXhwZWN0ZWRDcmMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDUkMgbWlzbWF0Y2ggZm9yIGNodW5rICR7Y2h1bmtOYW1lfS4gRXhwZWN0ZWQgJHtleHBlY3RlZENyY30sIGZvdW5kICR7YWN0dWFsQ3JjfWApO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUNyYyhidWZmZXIsIGxlbmd0aCkge1xuICAgIGJ1ZmZlci53cml0ZVVpbnQzMihjcmMobmV3IFVpbnQ4QXJyYXkoYnVmZmVyLmJ1ZmZlciwgYnVmZmVyLmJ5dGVPZmZzZXQgKyBidWZmZXIub2Zmc2V0IC0gbGVuZ3RoLCBsZW5ndGgpLCBsZW5ndGgpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyYy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/helpers/crc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/helpers/decodeInterlaceAdam7.js":
/*!***********************************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/helpers/decodeInterlaceAdam7.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeInterlaceAdam7: () => (/* binding */ decodeInterlaceAdam7)\n/* harmony export */ });\n/* harmony import */ var _applyUnfilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applyUnfilter */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/applyUnfilter.js\");\n\nconst uint16 = new Uint16Array([0x00ff]);\nconst uint8 = new Uint8Array(uint16.buffer);\nconst osIsLittleEndian = uint8[0] === 0xff;\n/**\n * Decodes the Adam7 interlaced PNG data.\n *\n * @param params - DecodeInterlaceNullParams\n * @returns - array of pixel data.\n */\nfunction decodeInterlaceAdam7(params) {\n    const { data, width, height, channels, depth } = params;\n    // Adam7 interlacing pattern\n    const passes = [\n        { x: 0, y: 0, xStep: 8, yStep: 8 }, // Pass 1\n        { x: 4, y: 0, xStep: 8, yStep: 8 }, // Pass 2\n        { x: 0, y: 4, xStep: 4, yStep: 8 }, // Pass 3\n        { x: 2, y: 0, xStep: 4, yStep: 4 }, // Pass 4\n        { x: 0, y: 2, xStep: 2, yStep: 4 }, // Pass 5\n        { x: 1, y: 0, xStep: 2, yStep: 2 }, // Pass 6\n        { x: 0, y: 1, xStep: 1, yStep: 2 }, // Pass 7\n    ];\n    const bytesPerPixel = Math.ceil(depth / 8) * channels;\n    const resultData = new Uint8Array(height * width * bytesPerPixel);\n    let offset = 0;\n    // Process each pass\n    for (let passIndex = 0; passIndex < 7; passIndex++) {\n        const pass = passes[passIndex];\n        // Calculate pass dimensions\n        const passWidth = Math.ceil((width - pass.x) / pass.xStep);\n        const passHeight = Math.ceil((height - pass.y) / pass.yStep);\n        if (passWidth <= 0 || passHeight <= 0)\n            continue;\n        const passLineBytes = passWidth * bytesPerPixel;\n        const prevLine = new Uint8Array(passLineBytes);\n        // Process each scanline in this pass\n        for (let y = 0; y < passHeight; y++) {\n            // First byte is the filter type\n            const filterType = data[offset++];\n            const currentLine = data.subarray(offset, offset + passLineBytes);\n            offset += passLineBytes;\n            // Create a new line for the unfiltered data\n            const newLine = new Uint8Array(passLineBytes);\n            // Apply the appropriate unfilter\n            (0,_applyUnfilter__WEBPACK_IMPORTED_MODULE_0__.applyUnfilter)(filterType, currentLine, newLine, prevLine, passLineBytes, bytesPerPixel);\n            prevLine.set(newLine);\n            for (let x = 0; x < passWidth; x++) {\n                const outputX = pass.x + x * pass.xStep;\n                const outputY = pass.y + y * pass.yStep;\n                if (outputX >= width || outputY >= height)\n                    continue;\n                for (let i = 0; i < bytesPerPixel; i++) {\n                    resultData[(outputY * width + outputX) * bytesPerPixel + i] =\n                        newLine[x * bytesPerPixel + i];\n                }\n            }\n        }\n    }\n    if (depth === 16) {\n        const uint16Data = new Uint16Array(resultData.buffer);\n        if (osIsLittleEndian) {\n            for (let k = 0; k < uint16Data.length; k++) {\n                // PNG is always big endian. Swap the bytes.\n                uint16Data[k] = swap16(uint16Data[k]);\n            }\n        }\n        return uint16Data;\n    }\n    else {\n        return resultData;\n    }\n}\nfunction swap16(val) {\n    return ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n}\n//# sourceMappingURL=decodeInterlaceAdam7.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9oZWxwZXJzL2RlY29kZUludGVybGFjZUFkYW03LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx1Q0FBdUM7QUFDbkQ7QUFDQTtBQUNBLFVBQVUsZ0NBQWdDO0FBQzFDLFVBQVUsZ0NBQWdDO0FBQzFDLFVBQVUsZ0NBQWdDO0FBQzFDLFVBQVUsZ0NBQWdDO0FBQzFDLFVBQVUsZ0NBQWdDO0FBQzFDLFVBQVUsZ0NBQWdDO0FBQzFDLFVBQVUsZ0NBQWdDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsZUFBZTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2REFBYTtBQUN6QjtBQUNBLDRCQUE0QixlQUFlO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG1CQUFtQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdUJBQXVCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFjaGFuU2hldHR5XFxPbmVEcml2ZSAtIEJpb1RhbGVcXERvY3VtZW50c1xcTGVhcm5pbmdQcm9qZWN0c1xcUmVhY3RBcHBzXFxHRk1JXFxnZm1pLW5leHRcXG5vZGVfbW9kdWxlc1xcZmFzdC1wbmdcXGxpYi1lc21cXGhlbHBlcnNcXGRlY29kZUludGVybGFjZUFkYW03LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwcGx5VW5maWx0ZXIgfSBmcm9tICcuL2FwcGx5VW5maWx0ZXInO1xuY29uc3QgdWludDE2ID0gbmV3IFVpbnQxNkFycmF5KFsweDAwZmZdKTtcbmNvbnN0IHVpbnQ4ID0gbmV3IFVpbnQ4QXJyYXkodWludDE2LmJ1ZmZlcik7XG5jb25zdCBvc0lzTGl0dGxlRW5kaWFuID0gdWludDhbMF0gPT09IDB4ZmY7XG4vKipcbiAqIERlY29kZXMgdGhlIEFkYW03IGludGVybGFjZWQgUE5HIGRhdGEuXG4gKlxuICogQHBhcmFtIHBhcmFtcyAtIERlY29kZUludGVybGFjZU51bGxQYXJhbXNcbiAqIEByZXR1cm5zIC0gYXJyYXkgb2YgcGl4ZWwgZGF0YS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUludGVybGFjZUFkYW03KHBhcmFtcykge1xuICAgIGNvbnN0IHsgZGF0YSwgd2lkdGgsIGhlaWdodCwgY2hhbm5lbHMsIGRlcHRoIH0gPSBwYXJhbXM7XG4gICAgLy8gQWRhbTcgaW50ZXJsYWNpbmcgcGF0dGVyblxuICAgIGNvbnN0IHBhc3NlcyA9IFtcbiAgICAgICAgeyB4OiAwLCB5OiAwLCB4U3RlcDogOCwgeVN0ZXA6IDggfSwgLy8gUGFzcyAxXG4gICAgICAgIHsgeDogNCwgeTogMCwgeFN0ZXA6IDgsIHlTdGVwOiA4IH0sIC8vIFBhc3MgMlxuICAgICAgICB7IHg6IDAsIHk6IDQsIHhTdGVwOiA0LCB5U3RlcDogOCB9LCAvLyBQYXNzIDNcbiAgICAgICAgeyB4OiAyLCB5OiAwLCB4U3RlcDogNCwgeVN0ZXA6IDQgfSwgLy8gUGFzcyA0XG4gICAgICAgIHsgeDogMCwgeTogMiwgeFN0ZXA6IDIsIHlTdGVwOiA0IH0sIC8vIFBhc3MgNVxuICAgICAgICB7IHg6IDEsIHk6IDAsIHhTdGVwOiAyLCB5U3RlcDogMiB9LCAvLyBQYXNzIDZcbiAgICAgICAgeyB4OiAwLCB5OiAxLCB4U3RlcDogMSwgeVN0ZXA6IDIgfSwgLy8gUGFzcyA3XG4gICAgXTtcbiAgICBjb25zdCBieXRlc1BlclBpeGVsID0gTWF0aC5jZWlsKGRlcHRoIC8gOCkgKiBjaGFubmVscztcbiAgICBjb25zdCByZXN1bHREYXRhID0gbmV3IFVpbnQ4QXJyYXkoaGVpZ2h0ICogd2lkdGggKiBieXRlc1BlclBpeGVsKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICAvLyBQcm9jZXNzIGVhY2ggcGFzc1xuICAgIGZvciAobGV0IHBhc3NJbmRleCA9IDA7IHBhc3NJbmRleCA8IDc7IHBhc3NJbmRleCsrKSB7XG4gICAgICAgIGNvbnN0IHBhc3MgPSBwYXNzZXNbcGFzc0luZGV4XTtcbiAgICAgICAgLy8gQ2FsY3VsYXRlIHBhc3MgZGltZW5zaW9uc1xuICAgICAgICBjb25zdCBwYXNzV2lkdGggPSBNYXRoLmNlaWwoKHdpZHRoIC0gcGFzcy54KSAvIHBhc3MueFN0ZXApO1xuICAgICAgICBjb25zdCBwYXNzSGVpZ2h0ID0gTWF0aC5jZWlsKChoZWlnaHQgLSBwYXNzLnkpIC8gcGFzcy55U3RlcCk7XG4gICAgICAgIGlmIChwYXNzV2lkdGggPD0gMCB8fCBwYXNzSGVpZ2h0IDw9IDApXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgY29uc3QgcGFzc0xpbmVCeXRlcyA9IHBhc3NXaWR0aCAqIGJ5dGVzUGVyUGl4ZWw7XG4gICAgICAgIGNvbnN0IHByZXZMaW5lID0gbmV3IFVpbnQ4QXJyYXkocGFzc0xpbmVCeXRlcyk7XG4gICAgICAgIC8vIFByb2Nlc3MgZWFjaCBzY2FubGluZSBpbiB0aGlzIHBhc3NcbiAgICAgICAgZm9yIChsZXQgeSA9IDA7IHkgPCBwYXNzSGVpZ2h0OyB5KyspIHtcbiAgICAgICAgICAgIC8vIEZpcnN0IGJ5dGUgaXMgdGhlIGZpbHRlciB0eXBlXG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJUeXBlID0gZGF0YVtvZmZzZXQrK107XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50TGluZSA9IGRhdGEuc3ViYXJyYXkob2Zmc2V0LCBvZmZzZXQgKyBwYXNzTGluZUJ5dGVzKTtcbiAgICAgICAgICAgIG9mZnNldCArPSBwYXNzTGluZUJ5dGVzO1xuICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IGxpbmUgZm9yIHRoZSB1bmZpbHRlcmVkIGRhdGFcbiAgICAgICAgICAgIGNvbnN0IG5ld0xpbmUgPSBuZXcgVWludDhBcnJheShwYXNzTGluZUJ5dGVzKTtcbiAgICAgICAgICAgIC8vIEFwcGx5IHRoZSBhcHByb3ByaWF0ZSB1bmZpbHRlclxuICAgICAgICAgICAgYXBwbHlVbmZpbHRlcihmaWx0ZXJUeXBlLCBjdXJyZW50TGluZSwgbmV3TGluZSwgcHJldkxpbmUsIHBhc3NMaW5lQnl0ZXMsIGJ5dGVzUGVyUGl4ZWwpO1xuICAgICAgICAgICAgcHJldkxpbmUuc2V0KG5ld0xpbmUpO1xuICAgICAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCBwYXNzV2lkdGg7IHgrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG91dHB1dFggPSBwYXNzLnggKyB4ICogcGFzcy54U3RlcDtcbiAgICAgICAgICAgICAgICBjb25zdCBvdXRwdXRZID0gcGFzcy55ICsgeSAqIHBhc3MueVN0ZXA7XG4gICAgICAgICAgICAgICAgaWYgKG91dHB1dFggPj0gd2lkdGggfHwgb3V0cHV0WSA+PSBoZWlnaHQpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnl0ZXNQZXJQaXhlbDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdERhdGFbKG91dHB1dFkgKiB3aWR0aCArIG91dHB1dFgpICogYnl0ZXNQZXJQaXhlbCArIGldID1cbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0xpbmVbeCAqIGJ5dGVzUGVyUGl4ZWwgKyBpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGRlcHRoID09PSAxNikge1xuICAgICAgICBjb25zdCB1aW50MTZEYXRhID0gbmV3IFVpbnQxNkFycmF5KHJlc3VsdERhdGEuYnVmZmVyKTtcbiAgICAgICAgaWYgKG9zSXNMaXR0bGVFbmRpYW4pIHtcbiAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgdWludDE2RGF0YS5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgIC8vIFBORyBpcyBhbHdheXMgYmlnIGVuZGlhbi4gU3dhcCB0aGUgYnl0ZXMuXG4gICAgICAgICAgICAgICAgdWludDE2RGF0YVtrXSA9IHN3YXAxNih1aW50MTZEYXRhW2tdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdWludDE2RGF0YTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiByZXN1bHREYXRhO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHN3YXAxNih2YWwpIHtcbiAgICByZXR1cm4gKCh2YWwgJiAweGZmKSA8PCA4KSB8ICgodmFsID4+IDgpICYgMHhmZik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGVJbnRlcmxhY2VBZGFtNy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/helpers/decodeInterlaceAdam7.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/helpers/decodeInterlaceNull.js":
/*!**********************************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/helpers/decodeInterlaceNull.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeInterlaceNull: () => (/* binding */ decodeInterlaceNull)\n/* harmony export */ });\n/* harmony import */ var _unfilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./unfilter */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/unfilter.js\");\n\nconst uint16 = new Uint16Array([0x00ff]);\nconst uint8 = new Uint8Array(uint16.buffer);\nconst osIsLittleEndian = uint8[0] === 0xff;\nconst empty = new Uint8Array(0);\nfunction decodeInterlaceNull(params) {\n    const { data, width, height, channels, depth } = params;\n    const bytesPerPixel = Math.ceil(depth / 8) * channels;\n    const bytesPerLine = Math.ceil((depth / 8) * channels * width);\n    const newData = new Uint8Array(height * bytesPerLine);\n    let prevLine = empty;\n    let offset = 0;\n    let currentLine;\n    let newLine;\n    for (let i = 0; i < height; i++) {\n        currentLine = data.subarray(offset + 1, offset + 1 + bytesPerLine);\n        newLine = newData.subarray(i * bytesPerLine, (i + 1) * bytesPerLine);\n        switch (data[offset]) {\n            case 0:\n                (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterNone)(currentLine, newLine, bytesPerLine);\n                break;\n            case 1:\n                (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterSub)(currentLine, newLine, bytesPerLine, bytesPerPixel);\n                break;\n            case 2:\n                (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterUp)(currentLine, newLine, prevLine, bytesPerLine);\n                break;\n            case 3:\n                (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterAverage)(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel);\n                break;\n            case 4:\n                (0,_unfilter__WEBPACK_IMPORTED_MODULE_0__.unfilterPaeth)(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel);\n                break;\n            default:\n                throw new Error(`Unsupported filter: ${data[offset]}`);\n        }\n        prevLine = newLine;\n        offset += bytesPerLine + 1;\n    }\n    if (depth === 16) {\n        const uint16Data = new Uint16Array(newData.buffer);\n        if (osIsLittleEndian) {\n            for (let k = 0; k < uint16Data.length; k++) {\n                // PNG is always big endian. Swap the bytes.\n                uint16Data[k] = swap16(uint16Data[k]);\n            }\n        }\n        return uint16Data;\n    }\n    else {\n        return newData;\n    }\n}\nfunction swap16(val) {\n    return ((val & 0xff) << 8) | ((val >> 8) & 0xff);\n}\n//# sourceMappingURL=decodeInterlaceNull.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9oZWxwZXJzL2RlY29kZUludGVybGFjZU51bGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0c7QUFDcEc7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksdUNBQXVDO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdURBQVk7QUFDNUI7QUFDQTtBQUNBLGdCQUFnQixzREFBVztBQUMzQjtBQUNBO0FBQ0EsZ0JBQWdCLHFEQUFVO0FBQzFCO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQWU7QUFDL0I7QUFDQTtBQUNBLGdCQUFnQix3REFBYTtBQUM3QjtBQUNBO0FBQ0EsdURBQXVELGFBQWE7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdUJBQXVCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFjaGFuU2hldHR5XFxPbmVEcml2ZSAtIEJpb1RhbGVcXERvY3VtZW50c1xcTGVhcm5pbmdQcm9qZWN0c1xcUmVhY3RBcHBzXFxHRk1JXFxnZm1pLW5leHRcXG5vZGVfbW9kdWxlc1xcZmFzdC1wbmdcXGxpYi1lc21cXGhlbHBlcnNcXGRlY29kZUludGVybGFjZU51bGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdW5maWx0ZXJBdmVyYWdlLCB1bmZpbHRlck5vbmUsIHVuZmlsdGVyUGFldGgsIHVuZmlsdGVyU3ViLCB1bmZpbHRlclVwLCB9IGZyb20gJy4vdW5maWx0ZXInO1xuY29uc3QgdWludDE2ID0gbmV3IFVpbnQxNkFycmF5KFsweDAwZmZdKTtcbmNvbnN0IHVpbnQ4ID0gbmV3IFVpbnQ4QXJyYXkodWludDE2LmJ1ZmZlcik7XG5jb25zdCBvc0lzTGl0dGxlRW5kaWFuID0gdWludDhbMF0gPT09IDB4ZmY7XG5jb25zdCBlbXB0eSA9IG5ldyBVaW50OEFycmF5KDApO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUludGVybGFjZU51bGwocGFyYW1zKSB7XG4gICAgY29uc3QgeyBkYXRhLCB3aWR0aCwgaGVpZ2h0LCBjaGFubmVscywgZGVwdGggfSA9IHBhcmFtcztcbiAgICBjb25zdCBieXRlc1BlclBpeGVsID0gTWF0aC5jZWlsKGRlcHRoIC8gOCkgKiBjaGFubmVscztcbiAgICBjb25zdCBieXRlc1BlckxpbmUgPSBNYXRoLmNlaWwoKGRlcHRoIC8gOCkgKiBjaGFubmVscyAqIHdpZHRoKTtcbiAgICBjb25zdCBuZXdEYXRhID0gbmV3IFVpbnQ4QXJyYXkoaGVpZ2h0ICogYnl0ZXNQZXJMaW5lKTtcbiAgICBsZXQgcHJldkxpbmUgPSBlbXB0eTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBsZXQgY3VycmVudExpbmU7XG4gICAgbGV0IG5ld0xpbmU7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWlnaHQ7IGkrKykge1xuICAgICAgICBjdXJyZW50TGluZSA9IGRhdGEuc3ViYXJyYXkob2Zmc2V0ICsgMSwgb2Zmc2V0ICsgMSArIGJ5dGVzUGVyTGluZSk7XG4gICAgICAgIG5ld0xpbmUgPSBuZXdEYXRhLnN1YmFycmF5KGkgKiBieXRlc1BlckxpbmUsIChpICsgMSkgKiBieXRlc1BlckxpbmUpO1xuICAgICAgICBzd2l0Y2ggKGRhdGFbb2Zmc2V0XSkge1xuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIHVuZmlsdGVyTm9uZShjdXJyZW50TGluZSwgbmV3TGluZSwgYnl0ZXNQZXJMaW5lKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICB1bmZpbHRlclN1YihjdXJyZW50TGluZSwgbmV3TGluZSwgYnl0ZXNQZXJMaW5lLCBieXRlc1BlclBpeGVsKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICB1bmZpbHRlclVwKGN1cnJlbnRMaW5lLCBuZXdMaW5lLCBwcmV2TGluZSwgYnl0ZXNQZXJMaW5lKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICB1bmZpbHRlckF2ZXJhZ2UoY3VycmVudExpbmUsIG5ld0xpbmUsIHByZXZMaW5lLCBieXRlc1BlckxpbmUsIGJ5dGVzUGVyUGl4ZWwpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgIHVuZmlsdGVyUGFldGgoY3VycmVudExpbmUsIG5ld0xpbmUsIHByZXZMaW5lLCBieXRlc1BlckxpbmUsIGJ5dGVzUGVyUGl4ZWwpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGZpbHRlcjogJHtkYXRhW29mZnNldF19YCk7XG4gICAgICAgIH1cbiAgICAgICAgcHJldkxpbmUgPSBuZXdMaW5lO1xuICAgICAgICBvZmZzZXQgKz0gYnl0ZXNQZXJMaW5lICsgMTtcbiAgICB9XG4gICAgaWYgKGRlcHRoID09PSAxNikge1xuICAgICAgICBjb25zdCB1aW50MTZEYXRhID0gbmV3IFVpbnQxNkFycmF5KG5ld0RhdGEuYnVmZmVyKTtcbiAgICAgICAgaWYgKG9zSXNMaXR0bGVFbmRpYW4pIHtcbiAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgdWludDE2RGF0YS5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgIC8vIFBORyBpcyBhbHdheXMgYmlnIGVuZGlhbi4gU3dhcCB0aGUgYnl0ZXMuXG4gICAgICAgICAgICAgICAgdWludDE2RGF0YVtrXSA9IHN3YXAxNih1aW50MTZEYXRhW2tdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdWludDE2RGF0YTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXdEYXRhO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHN3YXAxNih2YWwpIHtcbiAgICByZXR1cm4gKCh2YWwgJiAweGZmKSA8PCA4KSB8ICgodmFsID4+IDgpICYgMHhmZik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGVJbnRlcmxhY2VOdWxsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/helpers/decodeInterlaceNull.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/helpers/signature.js":
/*!************************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/helpers/signature.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkSignature: () => (/* binding */ checkSignature),\n/* harmony export */   hasPngSignature: () => (/* binding */ hasPngSignature),\n/* harmony export */   writeSignature: () => (/* binding */ writeSignature)\n/* harmony export */ });\n// https://www.w3.org/TR/PNG/#5PNG-file-signature\nconst pngSignature = Uint8Array.of(137, 80, 78, 71, 13, 10, 26, 10);\nfunction writeSignature(buffer) {\n    buffer.writeBytes(pngSignature);\n}\nfunction checkSignature(buffer) {\n    if (!hasPngSignature(buffer.readBytes(pngSignature.length))) {\n        throw new Error('wrong PNG signature');\n    }\n}\nfunction hasPngSignature(array) {\n    if (array.length < pngSignature.length) {\n        return false;\n    }\n    for (let i = 0; i < pngSignature.length; i++) {\n        if (array[i] !== pngSignature[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9oZWxwZXJzL3NpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlCQUF5QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWNoYW5TaGV0dHlcXE9uZURyaXZlIC0gQmlvVGFsZVxcRG9jdW1lbnRzXFxMZWFybmluZ1Byb2plY3RzXFxSZWFjdEFwcHNcXEdGTUlcXGdmbWktbmV4dFxcbm9kZV9tb2R1bGVzXFxmYXN0LXBuZ1xcbGliLWVzbVxcaGVscGVyc1xcc2lnbmF0dXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9QTkcvIzVQTkctZmlsZS1zaWduYXR1cmVcbmNvbnN0IHBuZ1NpZ25hdHVyZSA9IFVpbnQ4QXJyYXkub2YoMTM3LCA4MCwgNzgsIDcxLCAxMywgMTAsIDI2LCAxMCk7XG5leHBvcnQgZnVuY3Rpb24gd3JpdGVTaWduYXR1cmUoYnVmZmVyKSB7XG4gICAgYnVmZmVyLndyaXRlQnl0ZXMocG5nU2lnbmF0dXJlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjaGVja1NpZ25hdHVyZShidWZmZXIpIHtcbiAgICBpZiAoIWhhc1BuZ1NpZ25hdHVyZShidWZmZXIucmVhZEJ5dGVzKHBuZ1NpZ25hdHVyZS5sZW5ndGgpKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3dyb25nIFBORyBzaWduYXR1cmUnKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzUG5nU2lnbmF0dXJlKGFycmF5KSB7XG4gICAgaWYgKGFycmF5Lmxlbmd0aCA8IHBuZ1NpZ25hdHVyZS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBuZ1NpZ25hdHVyZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYXJyYXlbaV0gIT09IHBuZ1NpZ25hdHVyZVtpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/helpers/signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/helpers/text.js":
/*!*******************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/helpers/text.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodetEXt: () => (/* binding */ decodetEXt),\n/* harmony export */   encodetEXt: () => (/* binding */ encodetEXt),\n/* harmony export */   readKeyword: () => (/* binding */ readKeyword),\n/* harmony export */   readLatin1: () => (/* binding */ readLatin1),\n/* harmony export */   textChunkName: () => (/* binding */ textChunkName)\n/* harmony export */ });\n/* harmony import */ var _crc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crc */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/crc.js\");\n\n// https://www.w3.org/TR/png/#11tEXt\nconst textChunkName = 'tEXt';\nconst NULL = 0;\nconst latin1Decoder = new TextDecoder('latin1');\nfunction validateKeyword(keyword) {\n    validateLatin1(keyword);\n    if (keyword.length === 0 || keyword.length > 79) {\n        throw new Error('keyword length must be between 1 and 79');\n    }\n}\n// eslint-disable-next-line no-control-regex\nconst latin1Regex = /^[\\u0000-\\u00FF]*$/;\nfunction validateLatin1(text) {\n    if (!latin1Regex.test(text)) {\n        throw new Error('invalid latin1 text');\n    }\n}\nfunction decodetEXt(text, buffer, length) {\n    const keyword = readKeyword(buffer);\n    text[keyword] = readLatin1(buffer, length - keyword.length - 1);\n}\nfunction encodetEXt(buffer, keyword, text) {\n    validateKeyword(keyword);\n    validateLatin1(text);\n    const length = keyword.length + 1 /* NULL */ + text.length;\n    buffer.writeUint32(length);\n    buffer.writeChars(textChunkName);\n    buffer.writeChars(keyword);\n    buffer.writeByte(NULL);\n    buffer.writeChars(text);\n    (0,_crc__WEBPACK_IMPORTED_MODULE_0__.writeCrc)(buffer, length + 4);\n}\n// https://www.w3.org/TR/png/#11keywords\nfunction readKeyword(buffer) {\n    buffer.mark();\n    while (buffer.readByte() !== NULL) {\n        /* advance */\n    }\n    const end = buffer.offset;\n    buffer.reset();\n    const keyword = latin1Decoder.decode(buffer.readBytes(end - buffer.offset - 1));\n    // NULL\n    buffer.skip(1);\n    validateKeyword(keyword);\n    return keyword;\n}\nfunction readLatin1(buffer, length) {\n    return latin1Decoder.decode(buffer.readBytes(length));\n}\n//# sourceMappingURL=text.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9oZWxwZXJzL3RleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlDO0FBQ2pDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksOENBQVE7QUFDWjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWNoYW5TaGV0dHlcXE9uZURyaXZlIC0gQmlvVGFsZVxcRG9jdW1lbnRzXFxMZWFybmluZ1Byb2plY3RzXFxSZWFjdEFwcHNcXEdGTUlcXGdmbWktbmV4dFxcbm9kZV9tb2R1bGVzXFxmYXN0LXBuZ1xcbGliLWVzbVxcaGVscGVyc1xcdGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3cml0ZUNyYyB9IGZyb20gJy4vY3JjJztcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9wbmcvIzExdEVYdFxuZXhwb3J0IGNvbnN0IHRleHRDaHVua05hbWUgPSAndEVYdCc7XG5jb25zdCBOVUxMID0gMDtcbmNvbnN0IGxhdGluMURlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoJ2xhdGluMScpO1xuZnVuY3Rpb24gdmFsaWRhdGVLZXl3b3JkKGtleXdvcmQpIHtcbiAgICB2YWxpZGF0ZUxhdGluMShrZXl3b3JkKTtcbiAgICBpZiAoa2V5d29yZC5sZW5ndGggPT09IDAgfHwga2V5d29yZC5sZW5ndGggPiA3OSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2tleXdvcmQgbGVuZ3RoIG11c3QgYmUgYmV0d2VlbiAxIGFuZCA3OScpO1xuICAgIH1cbn1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250cm9sLXJlZ2V4XG5jb25zdCBsYXRpbjFSZWdleCA9IC9eW1xcdTAwMDAtXFx1MDBGRl0qJC87XG5mdW5jdGlvbiB2YWxpZGF0ZUxhdGluMSh0ZXh0KSB7XG4gICAgaWYgKCFsYXRpbjFSZWdleC50ZXN0KHRleHQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBsYXRpbjEgdGV4dCcpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGV0RVh0KHRleHQsIGJ1ZmZlciwgbGVuZ3RoKSB7XG4gICAgY29uc3Qga2V5d29yZCA9IHJlYWRLZXl3b3JkKGJ1ZmZlcik7XG4gICAgdGV4dFtrZXl3b3JkXSA9IHJlYWRMYXRpbjEoYnVmZmVyLCBsZW5ndGggLSBrZXl3b3JkLmxlbmd0aCAtIDEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZXRFWHQoYnVmZmVyLCBrZXl3b3JkLCB0ZXh0KSB7XG4gICAgdmFsaWRhdGVLZXl3b3JkKGtleXdvcmQpO1xuICAgIHZhbGlkYXRlTGF0aW4xKHRleHQpO1xuICAgIGNvbnN0IGxlbmd0aCA9IGtleXdvcmQubGVuZ3RoICsgMSAvKiBOVUxMICovICsgdGV4dC5sZW5ndGg7XG4gICAgYnVmZmVyLndyaXRlVWludDMyKGxlbmd0aCk7XG4gICAgYnVmZmVyLndyaXRlQ2hhcnModGV4dENodW5rTmFtZSk7XG4gICAgYnVmZmVyLndyaXRlQ2hhcnMoa2V5d29yZCk7XG4gICAgYnVmZmVyLndyaXRlQnl0ZShOVUxMKTtcbiAgICBidWZmZXIud3JpdGVDaGFycyh0ZXh0KTtcbiAgICB3cml0ZUNyYyhidWZmZXIsIGxlbmd0aCArIDQpO1xufVxuLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL3BuZy8jMTFrZXl3b3Jkc1xuZXhwb3J0IGZ1bmN0aW9uIHJlYWRLZXl3b3JkKGJ1ZmZlcikge1xuICAgIGJ1ZmZlci5tYXJrKCk7XG4gICAgd2hpbGUgKGJ1ZmZlci5yZWFkQnl0ZSgpICE9PSBOVUxMKSB7XG4gICAgICAgIC8qIGFkdmFuY2UgKi9cbiAgICB9XG4gICAgY29uc3QgZW5kID0gYnVmZmVyLm9mZnNldDtcbiAgICBidWZmZXIucmVzZXQoKTtcbiAgICBjb25zdCBrZXl3b3JkID0gbGF0aW4xRGVjb2Rlci5kZWNvZGUoYnVmZmVyLnJlYWRCeXRlcyhlbmQgLSBidWZmZXIub2Zmc2V0IC0gMSkpO1xuICAgIC8vIE5VTExcbiAgICBidWZmZXIuc2tpcCgxKTtcbiAgICB2YWxpZGF0ZUtleXdvcmQoa2V5d29yZCk7XG4gICAgcmV0dXJuIGtleXdvcmQ7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVhZExhdGluMShidWZmZXIsIGxlbmd0aCkge1xuICAgIHJldHVybiBsYXRpbjFEZWNvZGVyLmRlY29kZShidWZmZXIucmVhZEJ5dGVzKGxlbmd0aCkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGV4dC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/helpers/text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/helpers/unfilter.js":
/*!***********************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/helpers/unfilter.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unfilterAverage: () => (/* binding */ unfilterAverage),\n/* harmony export */   unfilterNone: () => (/* binding */ unfilterNone),\n/* harmony export */   unfilterPaeth: () => (/* binding */ unfilterPaeth),\n/* harmony export */   unfilterSub: () => (/* binding */ unfilterSub),\n/* harmony export */   unfilterUp: () => (/* binding */ unfilterUp)\n/* harmony export */ });\nfunction unfilterNone(currentLine, newLine, bytesPerLine) {\n    for (let i = 0; i < bytesPerLine; i++) {\n        newLine[i] = currentLine[i];\n    }\n}\nfunction unfilterSub(currentLine, newLine, bytesPerLine, bytesPerPixel) {\n    let i = 0;\n    for (; i < bytesPerPixel; i++) {\n        // just copy first bytes\n        newLine[i] = currentLine[i];\n    }\n    for (; i < bytesPerLine; i++) {\n        newLine[i] = (currentLine[i] + newLine[i - bytesPerPixel]) & 0xff;\n    }\n}\nfunction unfilterUp(currentLine, newLine, prevLine, bytesPerLine) {\n    let i = 0;\n    if (prevLine.length === 0) {\n        // just copy bytes for first line\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = currentLine[i];\n        }\n    }\n    else {\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = (currentLine[i] + prevLine[i]) & 0xff;\n        }\n    }\n}\nfunction unfilterAverage(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel) {\n    let i = 0;\n    if (prevLine.length === 0) {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = currentLine[i];\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = (currentLine[i] + (newLine[i - bytesPerPixel] >> 1)) & 0xff;\n        }\n    }\n    else {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = (currentLine[i] + (prevLine[i] >> 1)) & 0xff;\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] =\n                (currentLine[i] + ((newLine[i - bytesPerPixel] + prevLine[i]) >> 1)) &\n                    0xff;\n        }\n    }\n}\nfunction unfilterPaeth(currentLine, newLine, prevLine, bytesPerLine, bytesPerPixel) {\n    let i = 0;\n    if (prevLine.length === 0) {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = currentLine[i];\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] = (currentLine[i] + newLine[i - bytesPerPixel]) & 0xff;\n        }\n    }\n    else {\n        for (; i < bytesPerPixel; i++) {\n            newLine[i] = (currentLine[i] + prevLine[i]) & 0xff;\n        }\n        for (; i < bytesPerLine; i++) {\n            newLine[i] =\n                (currentLine[i] +\n                    paethPredictor(newLine[i - bytesPerPixel], prevLine[i], prevLine[i - bytesPerPixel])) &\n                    0xff;\n        }\n    }\n}\nfunction paethPredictor(a, b, c) {\n    const p = a + b - c;\n    const pa = Math.abs(p - a);\n    const pb = Math.abs(p - b);\n    const pc = Math.abs(p - c);\n    if (pa <= pb && pa <= pc)\n        return a;\n    else if (pb <= pc)\n        return b;\n    else\n        return c;\n}\n//# sourceMappingURL=unfilter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9oZWxwZXJzL3VuZmlsdGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUCxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxXQUFXLG1CQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLGtCQUFrQjtBQUM3QjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0JBQWtCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0EsZUFBZSxrQkFBa0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZUFBZSxtQkFBbUI7QUFDbEM7QUFDQTtBQUNBLGVBQWUsa0JBQWtCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBbUI7QUFDbEM7QUFDQTtBQUNBLGVBQWUsa0JBQWtCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmFjaGFuU2hldHR5XFxPbmVEcml2ZSAtIEJpb1RhbGVcXERvY3VtZW50c1xcTGVhcm5pbmdQcm9qZWN0c1xcUmVhY3RBcHBzXFxHRk1JXFxnZm1pLW5leHRcXG5vZGVfbW9kdWxlc1xcZmFzdC1wbmdcXGxpYi1lc21cXGhlbHBlcnNcXHVuZmlsdGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiB1bmZpbHRlck5vbmUoY3VycmVudExpbmUsIG5ld0xpbmUsIGJ5dGVzUGVyTGluZSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnl0ZXNQZXJMaW5lOyBpKyspIHtcbiAgICAgICAgbmV3TGluZVtpXSA9IGN1cnJlbnRMaW5lW2ldO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB1bmZpbHRlclN1YihjdXJyZW50TGluZSwgbmV3TGluZSwgYnl0ZXNQZXJMaW5lLCBieXRlc1BlclBpeGVsKSB7XG4gICAgbGV0IGkgPSAwO1xuICAgIGZvciAoOyBpIDwgYnl0ZXNQZXJQaXhlbDsgaSsrKSB7XG4gICAgICAgIC8vIGp1c3QgY29weSBmaXJzdCBieXRlc1xuICAgICAgICBuZXdMaW5lW2ldID0gY3VycmVudExpbmVbaV07XG4gICAgfVxuICAgIGZvciAoOyBpIDwgYnl0ZXNQZXJMaW5lOyBpKyspIHtcbiAgICAgICAgbmV3TGluZVtpXSA9IChjdXJyZW50TGluZVtpXSArIG5ld0xpbmVbaSAtIGJ5dGVzUGVyUGl4ZWxdKSAmIDB4ZmY7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHVuZmlsdGVyVXAoY3VycmVudExpbmUsIG5ld0xpbmUsIHByZXZMaW5lLCBieXRlc1BlckxpbmUpIHtcbiAgICBsZXQgaSA9IDA7XG4gICAgaWYgKHByZXZMaW5lLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAvLyBqdXN0IGNvcHkgYnl0ZXMgZm9yIGZpcnN0IGxpbmVcbiAgICAgICAgZm9yICg7IGkgPCBieXRlc1BlckxpbmU7IGkrKykge1xuICAgICAgICAgICAgbmV3TGluZVtpXSA9IGN1cnJlbnRMaW5lW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBmb3IgKDsgaSA8IGJ5dGVzUGVyTGluZTsgaSsrKSB7XG4gICAgICAgICAgICBuZXdMaW5lW2ldID0gKGN1cnJlbnRMaW5lW2ldICsgcHJldkxpbmVbaV0pICYgMHhmZjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiB1bmZpbHRlckF2ZXJhZ2UoY3VycmVudExpbmUsIG5ld0xpbmUsIHByZXZMaW5lLCBieXRlc1BlckxpbmUsIGJ5dGVzUGVyUGl4ZWwpIHtcbiAgICBsZXQgaSA9IDA7XG4gICAgaWYgKHByZXZMaW5lLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBmb3IgKDsgaSA8IGJ5dGVzUGVyUGl4ZWw7IGkrKykge1xuICAgICAgICAgICAgbmV3TGluZVtpXSA9IGN1cnJlbnRMaW5lW2ldO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoOyBpIDwgYnl0ZXNQZXJMaW5lOyBpKyspIHtcbiAgICAgICAgICAgIG5ld0xpbmVbaV0gPSAoY3VycmVudExpbmVbaV0gKyAobmV3TGluZVtpIC0gYnl0ZXNQZXJQaXhlbF0gPj4gMSkpICYgMHhmZjtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZm9yICg7IGkgPCBieXRlc1BlclBpeGVsOyBpKyspIHtcbiAgICAgICAgICAgIG5ld0xpbmVbaV0gPSAoY3VycmVudExpbmVbaV0gKyAocHJldkxpbmVbaV0gPj4gMSkpICYgMHhmZjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKDsgaSA8IGJ5dGVzUGVyTGluZTsgaSsrKSB7XG4gICAgICAgICAgICBuZXdMaW5lW2ldID1cbiAgICAgICAgICAgICAgICAoY3VycmVudExpbmVbaV0gKyAoKG5ld0xpbmVbaSAtIGJ5dGVzUGVyUGl4ZWxdICsgcHJldkxpbmVbaV0pID4+IDEpKSAmXG4gICAgICAgICAgICAgICAgICAgIDB4ZmY7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gdW5maWx0ZXJQYWV0aChjdXJyZW50TGluZSwgbmV3TGluZSwgcHJldkxpbmUsIGJ5dGVzUGVyTGluZSwgYnl0ZXNQZXJQaXhlbCkge1xuICAgIGxldCBpID0gMDtcbiAgICBpZiAocHJldkxpbmUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGZvciAoOyBpIDwgYnl0ZXNQZXJQaXhlbDsgaSsrKSB7XG4gICAgICAgICAgICBuZXdMaW5lW2ldID0gY3VycmVudExpbmVbaV07XG4gICAgICAgIH1cbiAgICAgICAgZm9yICg7IGkgPCBieXRlc1BlckxpbmU7IGkrKykge1xuICAgICAgICAgICAgbmV3TGluZVtpXSA9IChjdXJyZW50TGluZVtpXSArIG5ld0xpbmVbaSAtIGJ5dGVzUGVyUGl4ZWxdKSAmIDB4ZmY7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAoOyBpIDwgYnl0ZXNQZXJQaXhlbDsgaSsrKSB7XG4gICAgICAgICAgICBuZXdMaW5lW2ldID0gKGN1cnJlbnRMaW5lW2ldICsgcHJldkxpbmVbaV0pICYgMHhmZjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKDsgaSA8IGJ5dGVzUGVyTGluZTsgaSsrKSB7XG4gICAgICAgICAgICBuZXdMaW5lW2ldID1cbiAgICAgICAgICAgICAgICAoY3VycmVudExpbmVbaV0gK1xuICAgICAgICAgICAgICAgICAgICBwYWV0aFByZWRpY3RvcihuZXdMaW5lW2kgLSBieXRlc1BlclBpeGVsXSwgcHJldkxpbmVbaV0sIHByZXZMaW5lW2kgLSBieXRlc1BlclBpeGVsXSkpICZcbiAgICAgICAgICAgICAgICAgICAgMHhmZjtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIHBhZXRoUHJlZGljdG9yKGEsIGIsIGMpIHtcbiAgICBjb25zdCBwID0gYSArIGIgLSBjO1xuICAgIGNvbnN0IHBhID0gTWF0aC5hYnMocCAtIGEpO1xuICAgIGNvbnN0IHBiID0gTWF0aC5hYnMocCAtIGIpO1xuICAgIGNvbnN0IHBjID0gTWF0aC5hYnMocCAtIGMpO1xuICAgIGlmIChwYSA8PSBwYiAmJiBwYSA8PSBwYylcbiAgICAgICAgcmV0dXJuIGE7XG4gICAgZWxzZSBpZiAocGIgPD0gcGMpXG4gICAgICAgIHJldHVybiBiO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuIGM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bmZpbHRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/helpers/unfilter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResolutionUnitSpecifier: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_3__.ResolutionUnitSpecifier),\n/* harmony export */   convertIndexedToRgb: () => (/* reexport safe */ _convertIndexedToRgb__WEBPACK_IMPORTED_MODULE_4__.convertIndexedToRgb),\n/* harmony export */   decode: () => (/* binding */ decodePng),\n/* harmony export */   decodeApng: () => (/* binding */ decodeApng),\n/* harmony export */   encode: () => (/* binding */ encodePng),\n/* harmony export */   hasPngSignature: () => (/* reexport safe */ _helpers_signature__WEBPACK_IMPORTED_MODULE_2__.hasPngSignature)\n/* harmony export */ });\n/* harmony import */ var _PngDecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PngDecoder */ \"(ssr)/./node_modules/fast-png/lib-esm/PngDecoder.js\");\n/* harmony import */ var _PngEncoder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PngEncoder */ \"(ssr)/./node_modules/fast-png/lib-esm/PngEncoder.js\");\n/* harmony import */ var _helpers_signature__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers/signature */ \"(ssr)/./node_modules/fast-png/lib-esm/helpers/signature.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/fast-png/lib-esm/types.js\");\n/* harmony import */ var _convertIndexedToRgb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./convertIndexedToRgb */ \"(ssr)/./node_modules/fast-png/lib-esm/convertIndexedToRgb.js\");\n\n\n\n\nfunction decodePng(data, options) {\n    const decoder = new _PngDecoder__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data, options);\n    return decoder.decode();\n}\nfunction encodePng(png, options) {\n    const encoder = new _PngEncoder__WEBPACK_IMPORTED_MODULE_1__[\"default\"](png, options);\n    return encoder.encode();\n}\nfunction decodeApng(data, options) {\n    const decoder = new _PngDecoder__WEBPACK_IMPORTED_MODULE_0__[\"default\"](data, options);\n    return decoder.decodeApng();\n}\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNBO0FBQ2dCO0FBQzlCO0FBQ3hCO0FBQ0Esd0JBQXdCLG1EQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtREFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsbURBQVU7QUFDbEM7QUFDQTtBQUNnRTtBQUNKO0FBQzVEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhY2hhblNoZXR0eVxcT25lRHJpdmUgLSBCaW9UYWxlXFxEb2N1bWVudHNcXExlYXJuaW5nUHJvamVjdHNcXFJlYWN0QXBwc1xcR0ZNSVxcZ2ZtaS1uZXh0XFxub2RlX21vZHVsZXNcXGZhc3QtcG5nXFxsaWItZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUG5nRGVjb2RlciBmcm9tICcuL1BuZ0RlY29kZXInO1xuaW1wb3J0IFBuZ0VuY29kZXIgZnJvbSAnLi9QbmdFbmNvZGVyJztcbmV4cG9ydCB7IGhhc1BuZ1NpZ25hdHVyZSB9IGZyb20gJy4vaGVscGVycy9zaWduYXR1cmUnO1xuZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7XG5mdW5jdGlvbiBkZWNvZGVQbmcoZGF0YSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgUG5nRGVjb2RlcihkYXRhLCBvcHRpb25zKTtcbiAgICByZXR1cm4gZGVjb2Rlci5kZWNvZGUoKTtcbn1cbmZ1bmN0aW9uIGVuY29kZVBuZyhwbmcsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBlbmNvZGVyID0gbmV3IFBuZ0VuY29kZXIocG5nLCBvcHRpb25zKTtcbiAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUoKTtcbn1cbmZ1bmN0aW9uIGRlY29kZUFwbmcoZGF0YSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgUG5nRGVjb2RlcihkYXRhLCBvcHRpb25zKTtcbiAgICByZXR1cm4gZGVjb2Rlci5kZWNvZGVBcG5nKCk7XG59XG5leHBvcnQgeyBkZWNvZGVQbmcgYXMgZGVjb2RlLCBlbmNvZGVQbmcgYXMgZW5jb2RlLCBkZWNvZGVBcG5nIH07XG5leHBvcnQgeyBjb252ZXJ0SW5kZXhlZFRvUmdiIH0gZnJvbSAnLi9jb252ZXJ0SW5kZXhlZFRvUmdiJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/internalTypes.js":
/*!********************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/internalTypes.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlendOpType: () => (/* binding */ BlendOpType),\n/* harmony export */   ColorType: () => (/* binding */ ColorType),\n/* harmony export */   CompressionMethod: () => (/* binding */ CompressionMethod),\n/* harmony export */   DisposeOpType: () => (/* binding */ DisposeOpType),\n/* harmony export */   FilterMethod: () => (/* binding */ FilterMethod),\n/* harmony export */   InterlaceMethod: () => (/* binding */ InterlaceMethod)\n/* harmony export */ });\nconst ColorType = {\n    UNKNOWN: -1,\n    GREYSCALE: 0,\n    TRUECOLOUR: 2,\n    INDEXED_COLOUR: 3,\n    GREYSCALE_ALPHA: 4,\n    TRUECOLOUR_ALPHA: 6,\n};\nconst CompressionMethod = {\n    UNKNOWN: -1,\n    DEFLATE: 0,\n};\nconst FilterMethod = {\n    UNKNOWN: -1,\n    ADAPTIVE: 0,\n};\nconst InterlaceMethod = {\n    UNKNOWN: -1,\n    NO_INTERLACE: 0,\n    ADAM7: 1,\n};\nconst DisposeOpType = {\n    NONE: 0,\n    BACKGROUND: 1,\n    PREVIOUS: 2,\n};\nconst BlendOpType = {\n    SOURCE: 0,\n    OVER: 1,\n};\n//# sourceMappingURL=internalTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS9pbnRlcm5hbFR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZhY2hhblNoZXR0eVxcT25lRHJpdmUgLSBCaW9UYWxlXFxEb2N1bWVudHNcXExlYXJuaW5nUHJvamVjdHNcXFJlYWN0QXBwc1xcR0ZNSVxcZ2ZtaS1uZXh0XFxub2RlX21vZHVsZXNcXGZhc3QtcG5nXFxsaWItZXNtXFxpbnRlcm5hbFR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBDb2xvclR5cGUgPSB7XG4gICAgVU5LTk9XTjogLTEsXG4gICAgR1JFWVNDQUxFOiAwLFxuICAgIFRSVUVDT0xPVVI6IDIsXG4gICAgSU5ERVhFRF9DT0xPVVI6IDMsXG4gICAgR1JFWVNDQUxFX0FMUEhBOiA0LFxuICAgIFRSVUVDT0xPVVJfQUxQSEE6IDYsXG59O1xuZXhwb3J0IGNvbnN0IENvbXByZXNzaW9uTWV0aG9kID0ge1xuICAgIFVOS05PV046IC0xLFxuICAgIERFRkxBVEU6IDAsXG59O1xuZXhwb3J0IGNvbnN0IEZpbHRlck1ldGhvZCA9IHtcbiAgICBVTktOT1dOOiAtMSxcbiAgICBBREFQVElWRTogMCxcbn07XG5leHBvcnQgY29uc3QgSW50ZXJsYWNlTWV0aG9kID0ge1xuICAgIFVOS05PV046IC0xLFxuICAgIE5PX0lOVEVSTEFDRTogMCxcbiAgICBBREFNNzogMSxcbn07XG5leHBvcnQgY29uc3QgRGlzcG9zZU9wVHlwZSA9IHtcbiAgICBOT05FOiAwLFxuICAgIEJBQ0tHUk9VTkQ6IDEsXG4gICAgUFJFVklPVVM6IDIsXG59O1xuZXhwb3J0IGNvbnN0IEJsZW5kT3BUeXBlID0ge1xuICAgIFNPVVJDRTogMCxcbiAgICBPVkVSOiAxLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsVHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/internalTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/fast-png/lib-esm/types.js":
/*!************************************************!*\
  !*** ./node_modules/fast-png/lib-esm/types.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResolutionUnitSpecifier: () => (/* binding */ ResolutionUnitSpecifier)\n/* harmony export */ });\nvar ResolutionUnitSpecifier;\n(function (ResolutionUnitSpecifier) {\n    /**\n     * Unit is unknown\n     */\n    ResolutionUnitSpecifier[ResolutionUnitSpecifier[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Unit is the metre\n     */\n    ResolutionUnitSpecifier[ResolutionUnitSpecifier[\"METRE\"] = 1] = \"METRE\";\n})(ResolutionUnitSpecifier || (ResolutionUnitSpecifier = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZmFzdC1wbmcvbGliLWVzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBEQUEwRDtBQUMzRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWYWNoYW5TaGV0dHlcXE9uZURyaXZlIC0gQmlvVGFsZVxcRG9jdW1lbnRzXFxMZWFybmluZ1Byb2plY3RzXFxSZWFjdEFwcHNcXEdGTUlcXGdmbWktbmV4dFxcbm9kZV9tb2R1bGVzXFxmYXN0LXBuZ1xcbGliLWVzbVxcdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBSZXNvbHV0aW9uVW5pdFNwZWNpZmllcjtcbihmdW5jdGlvbiAoUmVzb2x1dGlvblVuaXRTcGVjaWZpZXIpIHtcbiAgICAvKipcbiAgICAgKiBVbml0IGlzIHVua25vd25cbiAgICAgKi9cbiAgICBSZXNvbHV0aW9uVW5pdFNwZWNpZmllcltSZXNvbHV0aW9uVW5pdFNwZWNpZmllcltcIlVOS05PV05cIl0gPSAwXSA9IFwiVU5LTk9XTlwiO1xuICAgIC8qKlxuICAgICAqIFVuaXQgaXMgdGhlIG1ldHJlXG4gICAgICovXG4gICAgUmVzb2x1dGlvblVuaXRTcGVjaWZpZXJbUmVzb2x1dGlvblVuaXRTcGVjaWZpZXJbXCJNRVRSRVwiXSA9IDFdID0gXCJNRVRSRVwiO1xufSkoUmVzb2x1dGlvblVuaXRTcGVjaWZpZXIgfHwgKFJlc29sdXRpb25Vbml0U3BlY2lmaWVyID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/fast-png/lib-esm/types.js\n");

/***/ })

};
;