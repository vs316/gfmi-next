"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/ThemeProvider.tsx":
/*!**********************************************!*\
  !*** ./src/app/components/ThemeProvider.tsx ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),\n/* harmony export */   useTheme: () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// import { createContext, useContext, useEffect, useState } from \"react\";\n// type Theme = \"dark\" | \"light\" | \"system\";\n// type ThemeProviderProps = {\n//   children: React.ReactNode;\n//   defaultTheme?: Theme;\n//   storageKey?: string;\n// };\n// type ThemeProviderState = {\n//   theme: Theme;\n//   setTheme: (theme: Theme) => void;\n// };\n// const initialState: ThemeProviderState = {\n//   theme: \"system\",\n//   setTheme: () => null,\n// };\n// const ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n// // View Transitions API helper\n// const supportsViewTransitions = () => {\n//   return typeof document !== 'undefined' && 'startViewTransition' in document;\n// };\n// export function ThemeProvider({\n//   children,\n//   defaultTheme = \"system\",\n//   storageKey = \"vite-ui-theme\",\n//   ...props\n// }: ThemeProviderProps) {\n//   const [theme, setTheme] = useState<Theme>(\n//     () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n//   );\n//   const applyTheme = (newTheme: Theme) => {\n//     const root = window.document.documentElement;\n//     root.classList.remove(\"light\", \"dark\");\n//     if (newTheme === \"system\") {\n//       const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n//         .matches\n//         ? \"dark\"\n//         : \"light\";\n//       root.classList.add(systemTheme);\n//     } else {\n//       root.classList.add(newTheme);\n//     }\n//   };\n//   useEffect(() => {\n//     applyTheme(theme);\n//   }, [theme]);\n//   const value = {\n//     theme,\n//     setTheme: (newTheme: Theme) => {\n//       // Use View Transitions API if supported\n//       if (supportsViewTransitions()) {\n//         (document as any).startViewTransition(() => {\n//           localStorage.setItem(storageKey, newTheme);\n//           setTheme(newTheme);\n//           applyTheme(newTheme);\n//         });\n//       } else {\n//         // Fallback for browsers without View Transitions API\n//         localStorage.setItem(storageKey, newTheme);\n//         setTheme(newTheme);\n//       }\n//     },\n//   };\n//   return (\n//     <ThemeProviderContext.Provider {...props} value={value}>\n//       {children}\n//     </ThemeProviderContext.Provider>\n//   );\n// }\n// export const useTheme = () => {\n//   const context = useContext(ThemeProviderContext);\n//   if (context === undefined)\n//     throw new Error(\"useTheme must be used within a ThemeProvider\");\n//   return context;\n// };\n/* __next_internal_client_entry_do_not_use__ ThemeProvider,useTheme auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst initialState = {\n    theme: \"system\",\n    setTheme: ()=>null\n};\nconst ThemeProviderContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);\n// View Transitions API helper\nconst supportsViewTransitions = ()=>{\n    return typeof document !== 'undefined' && 'startViewTransition' in document;\n};\nfunction ThemeProvider(param) {\n    let { children, defaultTheme = \"system\", storageKey = \"vite-ui-theme\", ...props } = param;\n    _s();\n    // const [theme, setTheme] = useState<Theme>(\n    //   () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n    // );\n    // // Initialize the animation hook\n    // // const { \n    // //   ref: animationRef, \n    // //   toggleSwitchTheme, \n    // //   isDarkMode \n    // // } = useModeAnimation({\n    // //   animationType: ThemeAnimationType.CIRCLE, // or 'blur-circle' or 'qr-scan'\n    // //   duration: 400,\n    // //   easing: 'cubic-bezier(0.4, 0, 0.2, 1)',\n    // //   globalClassName: 'dark',\n    // //   onDarkModeChange: (isDark: boolean) => {\n    // //     // This callback will be triggered by the animation hook\n    // //     const newTheme = isDark ? 'dark' : 'light';\n    // //     localStorage.setItem(storageKey, newTheme);\n    // //     setTheme(newTheme);\n    // //   }\n    // // });\n    // const applyTheme = (newTheme: Theme) => {\n    //   const root = window.document.documentElement;\n    //   root.classList.remove(\"light\", \"dark\");\n    //   if (newTheme === \"system\") {\n    //     const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n    //       .matches\n    //       ? \"dark\"\n    //       : \"light\";\n    //     root.classList.add(systemTheme);\n    //   } else {\n    //     root.classList.add(newTheme);\n    //   }\n    // };\n    // useEffect(() => {\n    //   applyTheme(theme);\n    // }, [theme]);\n    // const value = {\n    //   theme,\n    //   // animationRef,\n    //   setTheme: (newTheme: Theme) => {\n    //     // For system theme or when switching to system, use fallback\n    //     if (newTheme === \"system\" || theme === \"system\") {\n    //       // Use View Transitions API if supported\n    //       if (supportsViewTransitions()) {\n    //         (document as Document & { startViewTransition: (callback: () => void) => void }).startViewTransition(() => {\n    //           localStorage.setItem(storageKey, newTheme);\n    //           setTheme(newTheme);\n    //           applyTheme(newTheme);\n    //         });\n    //       } else {\n    //         localStorage.setItem(storageKey, newTheme);\n    //         setTheme(newTheme);\n    //       }\n    //     } else {\n    //       // For direct light/dark switching, use the animation hook\n    //       // if ((newTheme === \"dark\" && !isDarkMode) || (newTheme === \"light\" && isDarkMode)) {\n    //       //   toggleSwitchTheme();\n    //       // }\n    //       localStorage.setItem(storageKey, newTheme);\n    //       setTheme(newTheme);\n    //     }\n    //   },\n    // };\n    const [theme, setTheme] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultTheme);\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Initialize theme from localStorage after component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThemeProvider.useEffect\": ()=>{\n            try {\n                const storedTheme = localStorage.getItem(storageKey);\n                if (storedTheme) {\n                    setTheme(storedTheme);\n                }\n            } catch (error) {\n                // localStorage not available, use default theme\n                console.warn('localStorage not available, using default theme');\n            }\n            setMounted(true);\n        }\n    }[\"ThemeProvider.useEffect\"], [\n        storageKey\n    ]);\n    const applyTheme = (newTheme)=>{\n        if (false) {}\n        const root = window.document.documentElement;\n        root.classList.remove(\"light\", \"dark\");\n        if (newTheme === \"system\") {\n            const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n            root.classList.add(systemTheme);\n        } else {\n            root.classList.add(newTheme);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ThemeProvider.useEffect\": ()=>{\n            if (mounted) {\n                applyTheme(theme);\n            }\n        }\n    }[\"ThemeProvider.useEffect\"], [\n        theme,\n        mounted\n    ]);\n    const value = {\n        theme,\n        setTheme: (newTheme)=>{\n            try {\n                localStorage.setItem(storageKey, newTheme);\n            } catch (error) {\n                console.warn('Failed to save theme to localStorage');\n            }\n            // Use View Transitions API if supported\n            if (supportsViewTransitions()) {\n                document.startViewTransition(()=>{\n                    setTheme(newTheme);\n                    applyTheme(newTheme);\n                });\n            } else {\n                setTheme(newTheme);\n            }\n        }\n    };\n    // Prevent hydration mismatch by not rendering until mounted\n    if (!mounted) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThemeProviderContext.Provider, {\n            value: initialState,\n            children: children\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\VachanShetty\\\\OneDrive - BioTale\\\\Documents\\\\LearningProjects\\\\ReactApps\\\\GFMI\\\\gfmi-next\\\\src\\\\app\\\\components\\\\ThemeProvider.tsx\",\n            lineNumber: 260,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThemeProviderContext.Provider, {\n        ...props,\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\VachanShetty\\\\OneDrive - BioTale\\\\Documents\\\\LearningProjects\\\\ReactApps\\\\GFMI\\\\gfmi-next\\\\src\\\\app\\\\components\\\\ThemeProvider.tsx\",\n        lineNumber: 267,\n        columnNumber: 5\n    }, this);\n}\n_s(ThemeProvider, \"O2iXXcoCegWUrHJV7GB0gi7uKwY=\");\n_c = ThemeProvider;\nconst useTheme = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeProviderContext);\n    if (context === undefined) throw new Error(\"useTheme must be used within a ThemeProvider\");\n    return context;\n};\n_s1(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/ThemeProvider.tsx\n"));

/***/ })

});